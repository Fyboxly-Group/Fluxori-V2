import React, { useRef } from 'react';
import {
  AlertDialog,
  AlertDialogBody,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogContent,
  AlertDialogOverlay,
  AlertDialogCloseButton,
} from '@chakra-ui/react/modal';
import { Button } from '@chakra-ui/react/button';
import { Text } from '@chakra-ui/react/text';

interface DisconnectAlertDialogProps {
  isOpen: boolean;
  onClose: () => void;
  onConfirm: () => void;
  marketplaceName: string;
  isLoading: boolean;
}

/**
 * AlertDialog for confirming marketplace disconnection
 */
export const DisconnectAlertDialog: React.FC<DisconnectAlertDialogProps> = ({
  isOpen,
  onClose,
  onConfirm,
  marketplaceName,
  isLoading,
}) => {
  const cancelRef = useRef<HTMLButtonElement>(null);

  return (
    <AlertDialog
      isOpen={isOpen}
      leastDestructiveRef={cancelRef}
      onClose={onClose}
    >
      <AlertDialogOverlay>
        <AlertDialogContent>
          <AlertDialogHeader fontSize="lg" fontWeight="bold">
            Disconnect {marketplaceName}
          </AlertDialogHeader>
          <AlertDialogCloseButton />

          <AlertDialogBody>
            <Text>
              Are you sure you want to disconnect from {marketplaceName}? This will remove all connection data, but your synchronized data will remain intact.
            </Text>
          </AlertDialogBody>

          <AlertDialogFooter>
            <Button ref={cancelRef} onClick={onClose}>
              Cancel
            </Button>
            <Button 
              colorScheme="red" 
              onClick={onConfirm} 
              ml={3}
              isLoading={isLoading}
            >
              Disconnect
            </Button>
          </AlertDialogFooter>
        </AlertDialogContent>
      </AlertDialogOverlay>
    </AlertDialog>
  );
};

export default DisconnectAlertDialog;