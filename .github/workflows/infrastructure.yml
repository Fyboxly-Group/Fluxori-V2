name: Infrastructure Validation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'infrastructure/terraform/**'
      - '.github/workflows/infrastructure.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'infrastructure/terraform/**'
      - '.github/workflows/infrastructure.yml'

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  TF_VERSION: 1.5.7

jobs:
  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, staging, prod]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
      
      - name: Terraform Format Check
        working-directory: ./infrastructure/terraform
        run: terraform fmt -check -recursive
      
      - name: Terraform Init
        working-directory: ./infrastructure/terraform/environments/${{ matrix.environment }}
        run: terraform init -backend=false
      
      - name: Terraform Validate
        working-directory: ./infrastructure/terraform/environments/${{ matrix.environment }}
        run: terraform validate
  
  tfsec:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          working_directory: ./infrastructure/terraform
  
  checkov:
    name: Checkov Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./infrastructure/terraform
          quiet: true
          soft_fail: true
          framework: terraform
  
  terragrunt:
    name: Generate Terraform Plans
    runs-on: ubuntu-latest
    needs: [validate, tfsec, checkov]
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        environment: [dev, staging, prod]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ env.GCP_SA_KEY }}
      
      - name: Terraform Init
        working-directory: ./infrastructure/terraform/environments/${{ matrix.environment }}
        run: terraform init -backend=false
      
      - name: Terraform Plan
        working-directory: ./infrastructure/terraform/environments/${{ matrix.environment }}
        run: |
          terraform plan -var="project_id=${{ env.GCP_PROJECT_ID }}" \
            -var="mongodb_uri=dummy-mongodb-uri" \
            -var="jwt_secret=dummy-jwt-secret" \
            -no-color > plan.txt
      
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan-${{ matrix.environment }}
          path: ./infrastructure/terraform/environments/${{ matrix.environment }}/plan.txt
      
      - name: Comment on PR with Plan Summary
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const planText = fs.readFileSync('./infrastructure/terraform/environments/${{ matrix.environment }}/plan.txt', 'utf8');
            
            // Extract a summary from the plan
            let planSummary = planText.split('\n').slice(-10).join('\n');
            
            // Add a comment to the PR
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Terraform Plan for ${{ matrix.environment }} environment\n\n\`\`\`\n${planSummary}\n\`\`\`\n\nFull plan available as an artifact in the workflow run.`
            });