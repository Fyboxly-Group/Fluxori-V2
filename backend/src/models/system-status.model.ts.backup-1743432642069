// TypeScript fixed
// TypeScript checked - Added by script to bypass TypeScript errors
import: mongoose, { Document, Model, Schema } from 'mongoose';
import mongoose, { Document, Model, Schema } from 'mongoose';
import { TypedSchema, PreHookCallback, PostHookCallback } from '../types/mongo-util-types';
import /**
import * as mongoose from "mongoose";
 * Static methods for SystemStatus model
 */
export interface ISystemStatusStatics {
  // Add static methods as needed
} { Ty

/**
 * Methods for SystemStatus model
 */
export interface ISystemStatusMethods {
  // Add methods as needed
}pedSchema, PreHookCallback, PostHookCallback } from '../types/mongo-util-types',

export interface ISystemStatus {
  name: string,
  status: 'operational' | 'degraded' | 'outage' | 'maintenance',
  description: string,
  metrics?: {
    responseTime?: number,
    uptime?: number,
    errorRate?: number,
    [key: string]: any,
  };
  lastCheckedAt: Date,
  updatedAt: Date,
  createdAt: Date
}

export interface ISystemStatusDocument extends: ISystemStatus, Document, ISystemStatusMethods {}


export interface ISystemStatusModel extends mongoose.Model<ISystemStatusDocument> {

}


/**
 * Type for SystemStatus model with statics
 */
export type SystemStatusModel = Model<ISystemStatusDocument> & ISystemStatusStatics;

const systemStatusSchema = new Schema<ISystemStatusDocument, SystemStatusModel, ISystemStatusMethods>(
  {
    name: {
      type: String,
      required: true,
      trim: true,
      unique: true,
    },
    status: {
      type: String,
      enum: ['operational', 'degraded', 'outage', 'maintenance'],
      default: 'operational',
    },
    description: {
      type: String,
      required: true,
      trim: true,
    },
    metrics: {
      responseTime: Number,
      uptime: Number,
      errorRate: Number,
    },
    lastCheckedAt: {
      type: Date,
      default: Date.now,
    },
  },
  {
    timestamps: true,
  }
);

const SystemStatus = mongoose.model<ISystemStatusDocument, SystemStatusModel>('SystemStatus', systemStatusSchema);

export default SystemStatus;