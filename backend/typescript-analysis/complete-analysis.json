[
  {
    "path": "src/server.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/app.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "express, { Express, Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "cors",
        "importPath": "cors"
      },
      {
        "importStatement": "helmet",
        "importPath": "helmet"
      },
      {
        "importStatement": "morgan",
        "importPath": "morgan"
      },
      {
        "importStatement": "config",
        "importPath": "./config"
      },
      {
        "importStatement": "{ TypedMiddleware, ErrorHandlerMiddleware }",
        "importPath": "./types/express-extensions"
      },
      {
        "importStatement": "milestoneRoutes",
        "importPath": "./routes/milestone.routes"
      },
      {
        "importStatement": "customerRoutes",
        "importPath": "./routes/customer.routes"
      },
      {
        "importStatement": "inventoryRoutes",
        "importPath": "./routes/inventory.routes"
      },
      {
        "importStatement": "inventoryAlertRoutes",
        "importPath": "./routes/inventory-alert.routes"
      },
      {
        "importStatement": "inventoryStockRoutes",
        "importPath": "./routes/inventory-stock.routes"
      },
      {
        "importStatement": "warehouseRoutes",
        "importPath": "./routes/warehouse.routes"
      },
      {
        "importStatement": "analyticsRoutes",
        "importPath": "./routes/analytics.routes"
      },
      {
        "importStatement": "authRoutes",
        "importPath": "./routes/auth.routes"
      },
      {
        "importStatement": "dashboardRoutes",
        "importPath": "./routes/dashboard.routes"
      },
      {
        "importStatement": "projectRoutes",
        "importPath": "./routes/project.routes"
      },
      {
        "importStatement": "taskRoutes",
        "importPath": "./routes/task.routes"
      },
      {
        "importStatement": "shipmentRoutes",
        "importPath": "./routes/shipment.routes"
      },
      {
        "importStatement": "webhookRoutes",
        "importPath": "./routes/webhook.routes"
      },
      {
        "importStatement": "uploadRoutes",
        "importPath": "./routes/upload.routes"
      },
      {
        "importStatement": "connectionRoutes",
        "importPath": "./routes/connection.routes"
      },
      {
        "importStatement": "internationalTradeRoutes",
        "importPath": "./modules/international-trade/routes/international-trade.routes"
      },
      {
        "importStatement": "marketplaceProductRoutes",
        "importPath": "./modules/marketplaces/routes/marketplace-product.routes"
      },
      {
        "importStatement": "marketplaceRoutes",
        "importPath": "./modules/marketplaces/routes/marketplace.routes"
      },
      {
        "importStatement": "conversationRoutes",
        "importPath": "./modules/ai-cs-agent/routes/conversation.routes"
      },
      {
        "importStatement": "ragRetrievalRoutes",
        "importPath": "./modules/rag-retrieval/routes/rag-retrieval.routes"
      },
      {
        "importStatement": "notificationRoutes",
        "importPath": "./modules/notifications/routes/notification.routes"
      },
      {
        "importStatement": "creditRoutes",
        "importPath": "./modules/credits/routes/credit.routes"
      },
      {
        "importStatement": "xeroRoutes",
        "importPath": "./modules/xero-connector/routes/xero.routes"
      }
    ],
    "importCount": 29,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 115
  },
  {
    "path": "src/utils/logger.ts",
    "module": "core",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "config",
        "importPath": "../config"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 4,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 33
  },
  {
    "path": "src/utils/jwt.utils.ts",
    "module": "core",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "* as jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 39
  },
  {
    "path": "src/utils/email.ts",
    "module": "core",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "* as nodemailer",
        "importPath": "nodemailer"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 37
  },
  {
    "path": "src/types/xero-node.d.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 6,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 55
  },
  {
    "path": "src/types/swagger-jsdoc.d.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 4,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 23
  },
  {
    "path": "src/types/scheduler-mock.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 7,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 154
  },
  {
    "path": "src/types/promise-utils.ts",
    "module": "core",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 9,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 168
  },
  {
    "path": "src/types/pdf-utils.ts",
    "module": "core",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 124
  },
  {
    "path": "src/types/mongo-util-types.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Model, Schema }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 43
  },
  {
    "path": "src/types/long.d.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 3
  },
  {
    "path": "src/types/jsonwebtoken.d.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "* as jwt",
        "importPath": "jsonwebtoken"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 14
  },
  {
    "path": "src/types/jest.d.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 18,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 40
  },
  {
    "path": "src/types/index.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 23
  },
  {
    "path": "src/types/google-cloud-vertexai.d.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 50
  },
  {
    "path": "src/types/google-cloud-types.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 119
  },
  {
    "path": "src/types/google-cloud-secret-manager.d.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 56
  },
  {
    "path": "src/types/express-extensions.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 47
  },
  {
    "path": "src/types/axios.d.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 12,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 96
  },
  {
    "path": "src/types/axios-xero.d.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 5,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 31
  },
  {
    "path": "src/types/admin-middleware.ts",
    "module": "core",
    "fileType": "middleware",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 14
  },
  {
    "path": "src/types/utils/result.ts",
    "module": "core",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 54
  },
  {
    "path": "src/types/utils/mongoose-document.ts",
    "module": "core",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Document, Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 44
  },
  {
    "path": "src/types/utils/mongodb.ts",
    "module": "core",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 52
  },
  {
    "path": "src/types/models/warehouse.types.ts",
    "module": "core",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Types, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ MongooseDocument }",
        "importPath": "../utils/mongoose-document"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 3,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 31
  },
  {
    "path": "src/types/models/task.types.ts",
    "module": "core",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Types, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ MongooseDocument }",
        "importPath": "../utils/mongoose-document"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 3,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 31
  },
  {
    "path": "src/types/models/shipment.types.ts",
    "module": "core",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Types, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ MongooseDocument }",
        "importPath": "../utils/mongoose-document"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 30
  },
  {
    "path": "src/types/models/purchase-order.types.ts",
    "module": "core",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Types, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ MongooseDocument }",
        "importPath": "../utils/mongoose-document"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 29
  },
  {
    "path": "src/types/models/project.types.ts",
    "module": "core",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Types, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ MongooseDocument }",
        "importPath": "../utils/mongoose-document"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 30
  },
  {
    "path": "src/types/models/order.types.ts",
    "module": "core",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Types, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ MongooseDocument }",
        "importPath": "../utils/mongoose-document"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 3,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 31
  },
  {
    "path": "src/types/models/milestone.types.ts",
    "module": "core",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Types, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ MongooseDocument }",
        "importPath": "../utils/mongoose-document"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 3,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 31
  },
  {
    "path": "src/types/models/inventory.types.ts",
    "module": "core",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Types, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ MongooseDocument }",
        "importPath": "../utils/mongoose-document"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 3,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 31
  },
  {
    "path": "src/types/models/international-trade.types.ts",
    "module": "core",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Types, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ MongooseDocument }",
        "importPath": "../utils/mongoose-document"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 27
  },
  {
    "path": "src/types/models/index.ts",
    "module": "core",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 14
  },
  {
    "path": "src/types/models/customer.types.ts",
    "module": "core",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Types, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ MongooseDocument }",
        "importPath": "../utils/mongoose-document"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 30
  },
  {
    "path": "src/types/declarations/xero.d.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 5,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 276
  },
  {
    "path": "src/types/declarations/shopify-api.d.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 4,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 384
  },
  {
    "path": "src/types/declarations/secret-manager.d.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 5,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 32
  },
  {
    "path": "src/types/declarations/scheduler.d.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ CloudSchedulerOptions, JobRequest, Job }",
        "importPath": "../../google-cloud-types"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 20
  },
  {
    "path": "src/types/api/responses.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 21,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 178
  },
  {
    "path": "src/tests/setup.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "dotenv",
        "importPath": "dotenv"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ MongoMemoryServer }",
        "importPath": "mongodb-memory-server"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 62
  },
  {
    "path": "src/tests/multi-warehouse.test.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "request",
        "importPath": "supertest"
      },
      {
        "importStatement": "{ MongoMemoryServer }",
        "importPath": "mongodb-memory-server"
      },
      {
        "importStatement": "app",
        "importPath": "../app"
      },
      {
        "importStatement": "Warehouse",
        "importPath": "../models/warehouse.model"
      },
      {
        "importStatement": "InventoryItem",
        "importPath": "../models/inventory.model"
      },
      {
        "importStatement": "InventoryStock",
        "importPath": "../models/inventory-stock.model"
      },
      {
        "importStatement": "Supplier",
        "importPath": "../models/supplier.model"
      },
      {
        "importStatement": "{ createJwtToken }",
        "importPath": "../utils/auth"
      }
    ],
    "importCount": 9,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 338
  },
  {
    "path": "src/tests/debug-inventory.test.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/tests/utils/test-utils.ts",
    "module": "core",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response }",
        "importPath": "express"
      },
      {
        "importStatement": "{ createMockRequest, createMockResponse }",
        "importPath": "./test-app"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ MongoMemoryServer }",
        "importPath": "mongodb-memory-server"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 86
  },
  {
    "path": "src/tests/utils/test-app.ts",
    "module": "core",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Express, Request, Response }",
        "importPath": "express"
      },
      {
        "importStatement": "session",
        "importPath": "express-session"
      },
      {
        "importStatement": "cors",
        "importPath": "cors"
      },
      {
        "importStatement": "bodyParser",
        "importPath": "body-parser"
      },
      {
        "importStatement": "compression",
        "importPath": "compression"
      },
      {
        "importStatement": "helmet",
        "importPath": "helmet"
      },
      {
        "importStatement": "morgan",
        "importPath": "morgan"
      },
      {
        "importStatement": "cookieParser",
        "importPath": "cookie-parser"
      },
      {
        "importStatement": "passport",
        "importPath": "passport"
      },
      {
        "importStatement": "express",
        "importPath": "express"
      },
      {
        "importStatement": "swaggerUi",
        "importPath": "swagger-ui-express"
      },
      {
        "importStatement": "{ swaggerDocument }",
        "importPath": "../../config/swagger"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "logger",
        "importPath": "../../config/logger"
      },
      {
        "importStatement": "{ authRoutes }",
        "importPath": "../../routes/auth.route"
      },
      {
        "importStatement": "{ exampleRoutes }",
        "importPath": "../../routes/example.route"
      },
      {
        "importStatement": "{ customerRoutes }",
        "importPath": "../../routes/customer.route"
      },
      {
        "importStatement": "{ uploadRoutes }",
        "importPath": "../../routes/upload.route"
      },
      {
        "importStatement": "{ dashboardRoutes }",
        "importPath": "../../routes/dashboard.route"
      },
      {
        "importStatement": "{ inventoryRoutes }",
        "importPath": "../../routes/inventory.route"
      },
      {
        "importStatement": "{ projectRoutes }",
        "importPath": "../../routes/project.route"
      },
      {
        "importStatement": "{ taskRoutes }",
        "importPath": "../../routes/task.route"
      },
      {
        "importStatement": "{ milestoneRoutes }",
        "importPath": "../../routes/milestone.route"
      },
      {
        "importStatement": "{ shipmentRoutes }",
        "importPath": "../../routes/shipment.route"
      },
      {
        "importStatement": "{ warehouseRoutes }",
        "importPath": "../../routes/warehouse.route"
      },
      {
        "importStatement": "webhookRoutes",
        "importPath": "../../routes/webhook.route"
      },
      {
        "importStatement": "inventoryStockRoutes",
        "importPath": "../../routes/inventory-stock.route"
      },
      {
        "importStatement": "inventoryAlertRoutes",
        "importPath": "../../routes/inventory-alert.route"
      },
      {
        "importStatement": "analyticsRoutes",
        "importPath": "../../routes/analytics.route"
      },
      {
        "importStatement": "appConfig",
        "importPath": "../../config"
      },
      {
        "importStatement": "{ errorHandler }",
        "importPath": "../../middleware/error.middleware"
      },
      {
        "importStatement": "{ requestLogger }",
        "importPath": "../../middleware/logging.middleware"
      },
      {
        "importStatement": "{ setupPassport }",
        "importPath": "../../config/passport"
      }
    ],
    "importCount": 33,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 181
  },
  {
    "path": "src/tests/templates/service.test.template.ts",
    "module": "core",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ jest }",
        "importPath": "@jest/globals"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ SomeService }",
        "importPath": "../services/some.service"
      },
      {
        "importStatement": "SomeModel",
        "importPath": "../models/some.model"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 83
  },
  {
    "path": "src/tests/templates/controller.test.template.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ jest }",
        "importPath": "@jest/globals"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "request",
        "importPath": "supertest"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      },
      {
        "importStatement": "{ createTestApp }",
        "importPath": "../utils/test-app"
      },
      {
        "importStatement": "SomeModel",
        "importPath": "../models/some.model"
      }
    ],
    "importCount": 6,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 111
  },
  {
    "path": "src/tests/integration/upload.integration.test.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "request",
        "importPath": "supertest"
      },
      {
        "importStatement": "app",
        "importPath": "../../app"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "config",
        "importPath": "../../config"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 23
  },
  {
    "path": "src/tests/integration/task.integration.test.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "request",
        "importPath": "supertest"
      },
      {
        "importStatement": "app",
        "importPath": "../../app"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "config",
        "importPath": "../../config"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 23
  },
  {
    "path": "src/tests/integration/shipment.integration.test.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "request",
        "importPath": "supertest"
      },
      {
        "importStatement": "app",
        "importPath": "../../app"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "config",
        "importPath": "../../config"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 23
  },
  {
    "path": "src/tests/integration/project.integration.test.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "request",
        "importPath": "supertest"
      },
      {
        "importStatement": "app",
        "importPath": "../../app"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "config",
        "importPath": "../../config"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 23
  },
  {
    "path": "src/tests/integration/milestone.integration.test.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "request",
        "importPath": "supertest"
      },
      {
        "importStatement": "app",
        "importPath": "../../app"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "config",
        "importPath": "../../config"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 23
  },
  {
    "path": "src/tests/integration/inventory.integration.test.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "request",
        "importPath": "supertest"
      },
      {
        "importStatement": "app",
        "importPath": "../../app"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "config",
        "importPath": "../../config"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 23
  },
  {
    "path": "src/tests/integration/inventory-alert.integration.test.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "request",
        "importPath": "supertest"
      },
      {
        "importStatement": "app",
        "importPath": "../../app"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "config",
        "importPath": "../../config"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 23
  },
  {
    "path": "src/tests/integration/dashboard.integration.test.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "request",
        "importPath": "supertest"
      },
      {
        "importStatement": "app",
        "importPath": "../../app"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "config",
        "importPath": "../../config"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 23
  },
  {
    "path": "src/tests/integration/customer.integration.test.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "request",
        "importPath": "supertest"
      },
      {
        "importStatement": "app",
        "importPath": "../../app"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "config",
        "importPath": "../../config"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 23
  },
  {
    "path": "src/tests/integration/auth.integration.test.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "request",
        "importPath": "supertest"
      },
      {
        "importStatement": "app",
        "importPath": "../../app"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "config",
        "importPath": "../../config"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 23
  },
  {
    "path": "src/templates/service.template.ts",
    "module": "core",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Injectable }",
        "importPath": "../../decorators/injectable.decorator"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ {{ModelName}}Model, I{{ModelName}}, I{{ModelName}}Document }",
        "importPath": "../models/{{modelName}}.model"
      },
      {
        "importStatement": "{ Result, success, failure }",
        "importPath": "../../types/utils/result"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 77
  },
  {
    "path": "src/templates/model.template.ts",
    "module": "core",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Schema, Document, Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 53
  },
  {
    "path": "src/templates/controller.template.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ {{ModelName}}Model }",
        "importPath": "../models/{{modelName}}.model"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 5,
    "lineCount": 121
  },
  {
    "path": "src/services/system-status.service.ts",
    "module": "core",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ toObjectId, getSafeId }",
        "importPath": "../types/mongo-util-types"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 51
  },
  {
    "path": "src/services/system-status.service.test.ts",
    "module": "core",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ jest, describe, it, expect, beforeEach, afterEach }",
        "importPath": "@jest/globals"
      },
      {
        "importStatement": "{ SystemStatus.serviceService }",
        "importPath": "./system-status.service"
      },
      {
        "importStatement": "SystemStatus",
        "importPath": "../models/system-status.model"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 35
  },
  {
    "path": "src/services/storage.service.ts",
    "module": "core",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "{ Storage, Bucket }",
        "importPath": "@google-cloud/storage"
      },
      {
        "importStatement": "* as path",
        "importPath": "path"
      },
      {
        "importStatement": "* as fs",
        "importPath": "fs"
      },
      {
        "importStatement": "* as crypto",
        "importPath": "crypto"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 157
  },
  {
    "path": "src/services/storage.service.test.ts",
    "module": "core",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ jest, describe, it, expect, beforeEach, afterEach }",
        "importPath": "@jest/globals"
      },
      {
        "importStatement": "{ Storage.serviceService }",
        "importPath": "./storage.service"
      },
      {
        "importStatement": "Storage",
        "importPath": "../models/storage.model"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 35
  },
  {
    "path": "src/services/seed.service.ts",
    "module": "core",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ toObjectId, getSafeId }",
        "importPath": "../types/mongo-util-types"
      },
      {
        "importStatement": "User",
        "importPath": "../models/user.model"
      },
      {
        "importStatement": "Task",
        "importPath": "../models/task.model"
      },
      {
        "importStatement": "Activity",
        "importPath": "../models/activity.model"
      },
      {
        "importStatement": "{ ActivityService }",
        "importPath": "./activity.service"
      }
    ],
    "importCount": 6,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 4,
    "lineCount": 278
  },
  {
    "path": "src/services/seed.service.test.ts",
    "module": "core",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ jest, describe, it, expect, beforeEach, afterEach }",
        "importPath": "@jest/globals"
      },
      {
        "importStatement": "{ Seed.serviceService }",
        "importPath": "./seed.service"
      },
      {
        "importStatement": "Seed",
        "importPath": "../models/seed.model"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 35
  },
  {
    "path": "src/services/inventory-reorder-check.service.ts",
    "module": "core",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "Inventory",
        "importPath": "../models/inventory.model"
      },
      {
        "importStatement": "InventoryAlert",
        "importPath": "../models/inventory-alert.model"
      },
      {
        "importStatement": "Activity",
        "importPath": "../models/activity.model"
      },
      {
        "importStatement": "{ AlertType, AlertStatus }",
        "importPath": "../models/inventory-alert.model"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 2,
    "lineCount": 210
  },
  {
    "path": "src/services/example.service.ts",
    "module": "core",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ toObjectId, getSafeId }",
        "importPath": "../types/mongo-util-types"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 42
  },
  {
    "path": "src/services/activity.service.ts",
    "module": "core",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 16
  },
  {
    "path": "src/services/activity.service.test.ts",
    "module": "core",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ jest, describe, it, expect, beforeEach, afterEach }",
        "importPath": "@jest/globals"
      },
      {
        "importStatement": "{ Activity.serviceService }",
        "importPath": "./activity.service"
      },
      {
        "importStatement": "Activity",
        "importPath": "../models/activity.model"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 35
  },
  {
    "path": "src/scripts/seed-multi-warehouse-data.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "config",
        "importPath": "../config"
      },
      {
        "importStatement": "Warehouse",
        "importPath": "../models/warehouse.model"
      },
      {
        "importStatement": "InventoryStock",
        "importPath": "../models/inventory-stock.model"
      },
      {
        "importStatement": "InventoryItem",
        "importPath": "../models/inventory.model"
      },
      {
        "importStatement": "Supplier",
        "importPath": "../models/supplier.model"
      }
    ],
    "importCount": 6,
    "anyTypeCount": 5,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 326
  },
  {
    "path": "src/scripts/migrate-inventory-to-warehouses.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/scripts/init-default-warehouse.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/schedulers/inventory-reorder-check.scheduler.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "{ CronJob }",
        "importPath": "cron"
      },
      {
        "importStatement": "InventoryReorderCheckService",
        "importPath": "../services/inventory-reorder-check.service"
      },
      {
        "importStatement": "config",
        "importPath": "../config"
      },
      {
        "importStatement": "logger",
        "importPath": "../utils/logger"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 45
  },
  {
    "path": "src/schedulers/index.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "{ CronJob }",
        "importPath": "cron"
      },
      {
        "importStatement": "logger",
        "importPath": "../utils/logger"
      },
      {
        "importStatement": "setupInventoryReorderCheckScheduler",
        "importPath": "./inventory-reorder-check.scheduler"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 63
  },
  {
    "path": "src/routes/webhook.routes.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "{ Router, Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "* as webhookController",
        "importPath": "../controllers/webhook.controller"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 39
  },
  {
    "path": "src/routes/warehouse.routes.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "* as express",
        "importPath": "express"
      },
      {
        "importStatement": "{ authenticate, authorize }",
        "importPath": "../middleware/auth.middleware"
      },
      {
        "importStatement": "* as warehouseController",
        "importPath": "../controllers/warehouse.controller"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 31
  },
  {
    "path": "src/routes/upload.routes.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/routes/upload.routes.test.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "* as request",
        "importPath": "supertest"
      },
      {
        "importStatement": "{ Express }",
        "importPath": "express"
      },
      {
        "importStatement": "* as mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "* as jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "* as config",
        "importPath": "../config"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 27
  },
  {
    "path": "src/routes/task.routes.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/routes/task.routes.test.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "* as request",
        "importPath": "supertest"
      },
      {
        "importStatement": "{ Express }",
        "importPath": "express"
      },
      {
        "importStatement": "* as mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "* as jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "* as config",
        "importPath": "../config"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 27
  },
  {
    "path": "src/routes/shipment.routes.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "* as express",
        "importPath": "express"
      },
      {
        "importStatement": "* as shipment_Controller",
        "importPath": "../controllers/shipment.controller"
      },
      {
        "importStatement": "{ authenticate }",
        "importPath": "../middleware/auth.middleware"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/routes/shipment.routes.test.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "* as request",
        "importPath": "supertest"
      },
      {
        "importStatement": "{ Express }",
        "importPath": "express"
      },
      {
        "importStatement": "* as mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "* as jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "* as config",
        "importPath": "../config"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 27
  },
  {
    "path": "src/routes/project.routes.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "* as express",
        "importPath": "express"
      },
      {
        "importStatement": "{ ProjectController }",
        "importPath": "../controllers/project.controller"
      },
      {
        "importStatement": "{ authenticate, authorize }",
        "importPath": "../middleware/auth.middleware"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 67
  },
  {
    "path": "src/routes/project.routes.test.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "* as request",
        "importPath": "supertest"
      },
      {
        "importStatement": "{ Express }",
        "importPath": "express"
      },
      {
        "importStatement": "* as mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "* as jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "* as config",
        "importPath": "../config"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 27
  },
  {
    "path": "src/routes/milestone.routes.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "{ Router, Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ authenticate }",
        "importPath": "../middleware/auth.middleware"
      },
      {
        "importStatement": "* as milestoneController",
        "importPath": "../controllers/milestone.controller"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 43
  },
  {
    "path": "src/routes/milestone.routes.test.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "* as request",
        "importPath": "supertest"
      },
      {
        "importStatement": "{ Express }",
        "importPath": "express"
      },
      {
        "importStatement": "* as mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ Types, ObjectId }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ Document, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "* as jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "* as config",
        "importPath": "../config"
      }
    ],
    "importCount": 7,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 141
  },
  {
    "path": "src/routes/inventory.routes.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "* as express",
        "importPath": "express"
      },
      {
        "importStatement": "{ InventoryController }",
        "importPath": "../controllers/inventory.controller"
      },
      {
        "importStatement": "{ authenticate, authorize }",
        "importPath": "../middleware/auth.middleware"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 67
  },
  {
    "path": "src/routes/inventory.routes.test.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "* as request",
        "importPath": "supertest"
      },
      {
        "importStatement": "{ Express }",
        "importPath": "express"
      },
      {
        "importStatement": "* as mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ Types, ObjectId }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ Document, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "* as jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "* as config",
        "importPath": "../config"
      }
    ],
    "importCount": 7,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 189
  },
  {
    "path": "src/routes/inventory-stock.routes.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "* as express",
        "importPath": "express"
      },
      {
        "importStatement": "{ authenticate, authorize }",
        "importPath": "../middleware/auth.middleware"
      },
      {
        "importStatement": "* as inventoryStockController",
        "importPath": "../controllers/inventory-stock.controller"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/routes/inventory-alert.routes.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "* as express",
        "importPath": "express"
      },
      {
        "importStatement": "* as inventoryAlertController",
        "importPath": "../controllers/inventory-alert.controller"
      },
      {
        "importStatement": "{ authenticate }",
        "importPath": "../middleware/auth.middleware"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 67
  },
  {
    "path": "src/routes/inventory-alert.routes.test.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "* as request",
        "importPath": "supertest"
      },
      {
        "importStatement": "{ Express }",
        "importPath": "express"
      },
      {
        "importStatement": "* as mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ Types, ObjectId }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ Document, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "* as jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "* as config",
        "importPath": "../config"
      }
    ],
    "importCount": 7,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 219
  },
  {
    "path": "src/routes/dashboard.routes.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "* as express",
        "importPath": "express"
      },
      {
        "importStatement": "{ DashboardController }",
        "importPath": "../controllers/dashboard.controller"
      },
      {
        "importStatement": "{ authenticate }",
        "importPath": "../middleware/auth.middleware"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 39
  },
  {
    "path": "src/routes/dashboard.routes.test.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "* as request",
        "importPath": "supertest"
      },
      {
        "importStatement": "{ Express }",
        "importPath": "express"
      },
      {
        "importStatement": "* as mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ Types, ObjectId }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ Document, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "* as jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "* as config",
        "importPath": "../config"
      }
    ],
    "importCount": 7,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 159
  },
  {
    "path": "src/routes/customer.routes.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "* as express",
        "importPath": "express"
      },
      {
        "importStatement": "* as customerController",
        "importPath": "../controllers/customer.controller"
      },
      {
        "importStatement": "{ authenticate, authorize }",
        "importPath": "../middleware/auth.middleware"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 53
  },
  {
    "path": "src/routes/customer.routes.test.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "* as request",
        "importPath": "supertest"
      },
      {
        "importStatement": "{ Express }",
        "importPath": "express"
      },
      {
        "importStatement": "* as mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ Types, ObjectId }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ Document, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "* as jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "* as config",
        "importPath": "../config"
      }
    ],
    "importCount": 7,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 143
  },
  {
    "path": "src/routes/connection.routes.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "express",
        "importPath": "express"
      },
      {
        "importStatement": "{ connectionRoutes }",
        "importPath": "../modules/connections"
      },
      {
        "importStatement": "* as connectionController",
        "importPath": "../controllers/connection.controller"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 11
  },
  {
    "path": "src/routes/auth.routes.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "* as express",
        "importPath": "express"
      },
      {
        "importStatement": "* as auth_Controller",
        "importPath": "../controllers/auth.controller"
      },
      {
        "importStatement": "{ authenticate }",
        "importPath": "../middleware/auth.middleware"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 50
  },
  {
    "path": "src/routes/auth.routes.test.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "* as request",
        "importPath": "supertest"
      },
      {
        "importStatement": "{ Express }",
        "importPath": "express"
      },
      {
        "importStatement": "* as mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ Types, ObjectId }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ Document, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "* as jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "* as config",
        "importPath": "../config"
      }
    ],
    "importCount": 7,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 219
  },
  {
    "path": "src/routes/analytics.routes.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "* as express",
        "importPath": "express"
      },
      {
        "importStatement": "* as analytics_Controller",
        "importPath": "../controllers/analytics.controller"
      },
      {
        "importStatement": "{ authenticate, authorize }",
        "importPath": "../middleware/auth.middleware"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 60
  },
  {
    "path": "src/routes/analytics.routes.test.ts",
    "module": "core",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "* as request",
        "importPath": "supertest"
      },
      {
        "importStatement": "{ Express }",
        "importPath": "express"
      },
      {
        "importStatement": "* as mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ Types, ObjectId }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ Document, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "* as jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "* as config",
        "importPath": "../config"
      }
    ],
    "importCount": 7,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 146
  },
  {
    "path": "src/modules/xero-connector/index.ts",
    "module": "xero-connector",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "xeroRoutes",
        "importPath": "./routes/xero.routes"
      },
      {
        "importStatement": "{ XeroAuthService }",
        "importPath": "./services/xero-auth.service"
      },
      {
        "importStatement": "{ XeroInvoiceService }",
        "importPath": "./services/xero-invoice.service"
      },
      {
        "importStatement": "{ XeroSyncService }",
        "importPath": "./services/xero-sync.service"
      },
      {
        "importStatement": "{ XeroContactService }",
        "importPath": "./services/xero-contact.service"
      },
      {
        "importStatement": "{ XeroAccountService }",
        "importPath": "./services/xero-account.service"
      },
      {
        "importStatement": "{ XeroConfigService }",
        "importPath": "./services/xero-config.service"
      },
      {
        "importStatement": "{ XeroBulkSyncService }",
        "importPath": "./services/xero-bulk-sync.service"
      },
      {
        "importStatement": "{ XeroWebhookService }",
        "importPath": "./services/xero-webhook.service"
      },
      {
        "importStatement": "XeroConnection",
        "importPath": "./models/xero-connection.model"
      },
      {
        "importStatement": "XeroConfig",
        "importPath": "./models/xero-config.model"
      },
      {
        "importStatement": "XeroAccountMapping",
        "importPath": "./models/xero-account-mapping.model"
      },
      {
        "importStatement": "XeroSyncStatus",
        "importPath": "./models/xero-sync-status.model"
      },
      {
        "importStatement": "xeroAuthController",
        "importPath": "./controllers/xero-auth.controller"
      },
      {
        "importStatement": "xeroInvoiceController",
        "importPath": "./controllers/xero-invoice.controller"
      },
      {
        "importStatement": "xeroContactController",
        "importPath": "./controllers/xero-contact.controller"
      },
      {
        "importStatement": "xeroAccountController",
        "importPath": "./controllers/xero-account.controller"
      },
      {
        "importStatement": "xeroConfigController",
        "importPath": "./controllers/xero-config.controller"
      },
      {
        "importStatement": "xeroSyncController",
        "importPath": "./controllers/xero-sync.controller"
      },
      {
        "importStatement": "xeroWebhookController",
        "importPath": "./controllers/xero-webhook.controller"
      },
      {
        "importStatement": "orderHooks",
        "importPath": "./utils/order-hooks"
      }
    ],
    "importCount": 21,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 88
  },
  {
    "path": "src/modules/xero-connector/utils/order-hooks.ts",
    "module": "xero-connector",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ XeroSyncService }",
        "importPath": "../services/xero-sync.service"
      },
      {
        "importStatement": "XeroConnection",
        "importPath": "../models/xero-connection.model"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 57
  },
  {
    "path": "src/modules/xero-connector/types/index.ts",
    "module": "xero-connector",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ TokenSet }",
        "importPath": "xero-node"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 169
  },
  {
    "path": "src/modules/xero-connector/tests/xero-webhook.service.test.ts",
    "module": "xero-connector",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ jest }",
        "importPath": "@jest/globals"
      },
      {
        "importStatement": "xeroWebhookService",
        "importPath": "../services/xero-webhook.service"
      },
      {
        "importStatement": "{ XeroWebhookEvent }",
        "importPath": "../types"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 182
  },
  {
    "path": "src/modules/xero-connector/tests/xero-sync.service.test.ts",
    "module": "xero-connector",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ jest }",
        "importPath": "@jest/globals"
      },
      {
        "importStatement": "xeroSyncService",
        "importPath": "../services/xero-sync.service"
      },
      {
        "importStatement": "xeroAuthService",
        "importPath": "../services/xero-auth.service"
      },
      {
        "importStatement": "xeroContactService",
        "importPath": "../services/xero-contact.service"
      },
      {
        "importStatement": "xeroInvoiceService",
        "importPath": "../services/xero-invoice.service"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ XeroUserCredentials, SyncOperationType }",
        "importPath": "../types"
      }
    ],
    "importCount": 7,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 396
  },
  {
    "path": "src/modules/xero-connector/tests/xero-invoice.service.test.ts",
    "module": "xero-connector",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ jest }",
        "importPath": "@jest/globals"
      },
      {
        "importStatement": "xeroInvoiceService",
        "importPath": "../services/xero-invoice.service"
      },
      {
        "importStatement": "xeroAuthService",
        "importPath": "../services/xero-auth.service"
      },
      {
        "importStatement": "{ XeroUserCredentials, FluxoriOrderData, XeroInvoiceResult }",
        "importPath": "../types"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 400
  },
  {
    "path": "src/modules/xero-connector/tests/xero-contact.service.test.ts",
    "module": "xero-connector",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ jest }",
        "importPath": "@jest/globals"
      },
      {
        "importStatement": "xeroContactService",
        "importPath": "../services/xero-contact.service"
      },
      {
        "importStatement": "xeroAuthService",
        "importPath": "../services/xero-auth.service"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ XeroUserCredentials }",
        "importPath": "../types"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 410
  },
  {
    "path": "src/modules/xero-connector/tests/xero-auth.service.test.ts",
    "module": "xero-connector",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ jest }",
        "importPath": "@jest/globals"
      },
      {
        "importStatement": "xeroAuthService",
        "importPath": "../services/xero-auth.service"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ XeroUserCredentials }",
        "importPath": "../types"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 219
  },
  {
    "path": "src/modules/xero-connector/services/xero-webhook.service.ts",
    "module": "xero-connector",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Injectable }",
        "importPath": "../../../decorators/injectable.decorator"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ AccountingAPI }",
        "importPath": "xero-node"
      },
      {
        "importStatement": "{ XeroAuthService }",
        "importPath": "./xero-auth.service"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 24
  },
  {
    "path": "src/modules/xero-connector/services/xero-sync.service.ts",
    "module": "xero-connector",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Injectable }",
        "importPath": "../../../decorators/injectable.decorator"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ AccountingAPI }",
        "importPath": "xero-node"
      },
      {
        "importStatement": "{ XeroAuthService }",
        "importPath": "./xero-auth.service"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 24
  },
  {
    "path": "src/modules/xero-connector/services/xero-invoice.service.ts",
    "module": "xero-connector",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Injectable }",
        "importPath": "../../../decorators/injectable.decorator"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ AccountingAPI }",
        "importPath": "xero-node"
      },
      {
        "importStatement": "{ XeroAuthService }",
        "importPath": "./xero-auth.service"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 24
  },
  {
    "path": "src/modules/xero-connector/services/xero-contact.service.ts",
    "module": "xero-connector",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Injectable }",
        "importPath": "../../../decorators/injectable.decorator"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ AccountingAPI }",
        "importPath": "xero-node"
      },
      {
        "importStatement": "{ XeroAuthService }",
        "importPath": "./xero-auth.service"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 24
  },
  {
    "path": "src/modules/xero-connector/services/xero-config.service.ts",
    "module": "xero-connector",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Injectable }",
        "importPath": "../../../decorators/injectable.decorator"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 54
  },
  {
    "path": "src/modules/xero-connector/services/xero-bulk-sync.service.ts",
    "module": "xero-connector",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Injectable }",
        "importPath": "../../../decorators/injectable.decorator"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ AccountingAPI }",
        "importPath": "xero-node"
      },
      {
        "importStatement": "{ XeroAuthService }",
        "importPath": "./xero-auth.service"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 24
  },
  {
    "path": "src/modules/xero-connector/services/xero-auth.service.ts",
    "module": "xero-connector",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Injectable }",
        "importPath": "../../../decorators/injectable.decorator"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ XeroClient, AccountingAPI }",
        "importPath": "xero-node"
      },
      {
        "importStatement": "{ XeroConfigService }",
        "importPath": "./xero-config.service"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 43
  },
  {
    "path": "src/modules/xero-connector/services/xero-account.service.ts",
    "module": "xero-connector",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Injectable }",
        "importPath": "../../../decorators/injectable.decorator"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ AccountingAPI }",
        "importPath": "xero-node"
      },
      {
        "importStatement": "{ XeroAuthService }",
        "importPath": "./xero-auth.service"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 24
  },
  {
    "path": "src/modules/xero-connector/routes/xero.routes.ts",
    "module": "xero-connector",
    "fileType": "route",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Router, Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "xeroAuthController",
        "importPath": "../controllers/xero-auth.controller"
      },
      {
        "importStatement": "xeroInvoiceController",
        "importPath": "../controllers/xero-invoice.controller"
      },
      {
        "importStatement": "xeroContactController",
        "importPath": "../controllers/xero-contact.controller"
      },
      {
        "importStatement": "xeroAccountController",
        "importPath": "../controllers/xero-account.controller"
      },
      {
        "importStatement": "xeroConfigController",
        "importPath": "../controllers/xero-config.controller"
      },
      {
        "importStatement": "xeroSyncController",
        "importPath": "../controllers/xero-sync.controller"
      },
      {
        "importStatement": "xeroWebhookController",
        "importPath": "../controllers/xero-webhook.controller"
      },
      {
        "importStatement": "{ authenticate as authMiddleware }",
        "importPath": "../../../middleware/auth.middleware"
      }
    ],
    "importCount": 9,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 863
  },
  {
    "path": "src/modules/xero-connector/models/xero-sync-status.model.ts",
    "module": "xero-connector",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Schema, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ SyncOperationType, SyncStatus }",
        "importPath": "../types"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 103
  },
  {
    "path": "src/modules/xero-connector/models/xero-connection.model.ts",
    "module": "xero-connector",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Schema, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "* as crypto",
        "importPath": "crypto"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 135
  },
  {
    "path": "src/modules/xero-connector/models/xero-config.model.ts",
    "module": "xero-connector",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Schema, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "type { XeroConfig }",
        "importPath": "../types"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 71
  },
  {
    "path": "src/modules/xero-connector/models/xero-account-mapping.model.ts",
    "module": "xero-connector",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Schema, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ AccountMapping }",
        "importPath": "../types"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 61
  },
  {
    "path": "src/modules/xero-connector/controllers/xero-webhook.controller.ts",
    "module": "xero-connector",
    "fileType": "controller",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response }",
        "importPath": "express"
      },
      {
        "importStatement": "{ XeroWebhookService }",
        "importPath": "../services/xero-webhook.service"
      },
      {
        "importStatement": "{ XeroWebhookEvent }",
        "importPath": "../types"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 58
  },
  {
    "path": "src/modules/xero-connector/controllers/xero-sync.controller.ts",
    "module": "xero-connector",
    "fileType": "controller",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response }",
        "importPath": "express"
      },
      {
        "importStatement": "{ XeroBulkSyncService }",
        "importPath": "../services/xero-bulk-sync.service"
      },
      {
        "importStatement": "{ XeroAuthService }",
        "importPath": "../services/xero-auth.service"
      },
      {
        "importStatement": "{ SyncOperationType }",
        "importPath": "../types"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 175
  },
  {
    "path": "src/modules/xero-connector/controllers/xero-invoice.controller.ts",
    "module": "xero-connector",
    "fileType": "controller",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response }",
        "importPath": "express"
      },
      {
        "importStatement": "{ XeroInvoiceService }",
        "importPath": "../services/xero-invoice.service"
      },
      {
        "importStatement": "{ XeroAuthService }",
        "importPath": "../services/xero-auth.service"
      },
      {
        "importStatement": "{ XeroSyncService }",
        "importPath": "../services/xero-sync.service"
      },
      {
        "importStatement": "{ FluxoriOrderData }",
        "importPath": "../types"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 137
  },
  {
    "path": "src/modules/xero-connector/controllers/xero-contact.controller.ts",
    "module": "xero-connector",
    "fileType": "controller",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response }",
        "importPath": "express"
      },
      {
        "importStatement": "{ XeroContactService }",
        "importPath": "../services/xero-contact.service"
      },
      {
        "importStatement": "{ XeroAuthService }",
        "importPath": "../services/xero-auth.service"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 235
  },
  {
    "path": "src/modules/xero-connector/controllers/xero-config.controller.ts",
    "module": "xero-connector",
    "fileType": "controller",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response }",
        "importPath": "express"
      },
      {
        "importStatement": "{ XeroConfigService }",
        "importPath": "../services/xero-config.service"
      },
      {
        "importStatement": "{ XeroAuthService }",
        "importPath": "../services/xero-auth.service"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 103
  },
  {
    "path": "src/modules/xero-connector/controllers/xero-auth.controller.ts",
    "module": "xero-connector",
    "fileType": "controller",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response }",
        "importPath": "express"
      },
      {
        "importStatement": "{ XeroAuthService }",
        "importPath": "../services/xero-auth.service"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 149
  },
  {
    "path": "src/modules/xero-connector/controllers/xero-account.controller.ts",
    "module": "xero-connector",
    "fileType": "controller",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response }",
        "importPath": "express"
      },
      {
        "importStatement": "{ XeroAccountService }",
        "importPath": "../services/xero-account.service"
      },
      {
        "importStatement": "{ XeroAuthService }",
        "importPath": "../services/xero-auth.service"
      },
      {
        "importStatement": "{ AccountMapping }",
        "importPath": "../types"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 191
  },
  {
    "path": "src/modules/sync-orchestrator/index.ts",
    "module": "sync-orchestrator",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "syncOrchestratorService",
        "importPath": "./services/sync-orchestrator.service"
      },
      {
        "importStatement": "syncOrchestratorRoutes",
        "importPath": "./routes/sync-orchestrator.routes"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 19
  },
  {
    "path": "src/modules/sync-orchestrator/utils/cloud-scheduler-setup.ts",
    "module": "sync-orchestrator",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ CloudSchedulerClient }",
        "importPath": "@google-cloud/scheduler"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 84
  },
  {
    "path": "src/modules/sync-orchestrator/tests/sync-orchestrator.test.ts",
    "module": "sync-orchestrator",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "syncOrchestratorService",
        "importPath": "../services/sync-orchestrator.service"
      },
      {
        "importStatement": "connectionService",
        "importPath": "../../connections/services/connection.service"
      },
      {
        "importStatement": "{ MarketplaceAdapterFactory }",
        "importPath": "../../marketplaces/adapters/marketplace-adapter.factory"
      },
      {
        "importStatement": "{ ConnectionStatus, SyncStatus }",
        "importPath": "../../connections/models/connection.model"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 172
  },
  {
    "path": "src/modules/sync-orchestrator/services/sync-orchestrator.service.ts",
    "module": "sync-orchestrator",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 16
  },
  {
    "path": "src/modules/sync-orchestrator/routes/sync-orchestrator.routes.ts",
    "module": "sync-orchestrator",
    "fileType": "route",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "express",
        "importPath": "express"
      },
      {
        "importStatement": "syncOrchestratorController",
        "importPath": "../controllers/sync-orchestrator.controller"
      },
      {
        "importStatement": "isAuthenticated",
        "importPath": "../../../middleware/auth.middleware"
      },
      {
        "importStatement": "isAdmin",
        "importPath": "../../../middleware/admin.middleware"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 87
  },
  {
    "path": "src/modules/sync-orchestrator/controllers/sync-orchestrator.controller.ts",
    "module": "sync-orchestrator",
    "fileType": "controller",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response }",
        "importPath": "express"
      },
      {
        "importStatement": "syncOrchestratorService",
        "importPath": "../services/sync-orchestrator.service"
      },
      {
        "importStatement": "logger",
        "importPath": "../../../utils/logger"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 174
  },
  {
    "path": "src/modules/rag-retrieval/index.ts",
    "module": "rag-retrieval",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ ragRetrievalRoutes }",
        "importPath": "./routes/rag-retrieval.routes"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 16
  },
  {
    "path": "src/modules/rag-retrieval/tests/rag-retrieval.service.test.ts",
    "module": "rag-retrieval",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ DocumentChunk, VectorMatch }",
        "importPath": "../interfaces/vector-search.interface"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 67
  },
  {
    "path": "src/modules/rag-retrieval/services/vector-search.service.ts",
    "module": "rag-retrieval",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 18
  },
  {
    "path": "src/modules/rag-retrieval/services/rag-retrieval.service.ts",
    "module": "rag-retrieval",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Injectable }",
        "importPath": "../../../decorators/injectable.decorator"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 68
  },
  {
    "path": "src/modules/rag-retrieval/services/embedding.service.ts",
    "module": "rag-retrieval",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 18
  },
  {
    "path": "src/modules/rag-retrieval/services/document.service.ts",
    "module": "rag-retrieval",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 18
  },
  {
    "path": "src/modules/rag-retrieval/routes/rag-retrieval.routes.ts",
    "module": "rag-retrieval",
    "fileType": "route",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Router, Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "* as rag_retrieval_Controller",
        "importPath": "../controllers/rag_retrieval.controller"
      },
      {
        "importStatement": "{ authenticate }",
        "importPath": "../../../middleware/auth.middleware"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 128
  },
  {
    "path": "src/modules/rag-retrieval/interfaces/vector-search.interface.ts",
    "module": "rag-retrieval",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 53
  },
  {
    "path": "src/modules/rag-retrieval/controllers/rag_retrieval.controller.ts",
    "module": "rag-retrieval",
    "fileType": "controller",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 19
  },
  {
    "path": "src/modules/rag-retrieval/controllers/rag-retrieval.controller.ts",
    "module": "rag-retrieval",
    "fileType": "controller",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ RAGRetrievalService }",
        "importPath": "../services/rag-retrieval.service"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 48
  },
  {
    "path": "src/modules/product-ingestion/index.ts",
    "module": "product-ingestion",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "productIngestionService",
        "importPath": "./services/product-ingestion.service"
      },
      {
        "importStatement": "productSyncConfigService",
        "importPath": "./services/product-sync-config.service"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 23
  },
  {
    "path": "src/modules/product-ingestion/tests/product-ingestion.test.ts",
    "module": "product-ingestion",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ productIngestionService, productSyncConfigService }",
        "importPath": "../index"
      },
      {
        "importStatement": "{ productMapperRegistry }",
        "importPath": "../mappers"
      },
      {
        "importStatement": "Product",
        "importPath": "../models/product.model"
      },
      {
        "importStatement": "ProductSyncConfig, { SyncDirection }",
        "importPath": "../models/product-sync-config.model"
      },
      {
        "importStatement": "Warehouse",
        "importPath": "../models/warehouse.model"
      },
      {
        "importStatement": "{ MarketplaceProduct, ProductStatus }",
        "importPath": "../../marketplaces/models/marketplace.models"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 7,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 307
  },
  {
    "path": "src/modules/product-ingestion/services/product-sync-config.service.ts",
    "module": "product-ingestion",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 16
  },
  {
    "path": "src/modules/product-ingestion/services/product-ingestion.service.ts",
    "module": "product-ingestion",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 16
  },
  {
    "path": "src/modules/product-ingestion/models/warehouse.model.ts",
    "module": "product-ingestion",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Schema, Document, Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 74
  },
  {
    "path": "src/modules/product-ingestion/models/product.model.ts",
    "module": "product-ingestion",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/modules/product-ingestion/models/product-sync-config.model.ts",
    "module": "product-ingestion",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Schema, Model }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 128
  },
  {
    "path": "src/modules/product-ingestion/mappers/takealot-product.mapper.ts",
    "module": "product-ingestion",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Injectable }",
        "importPath": "../../../decorators/injectable.decorator"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ ProductModel }",
        "importPath": "../models/product.model"
      },
      {
        "importStatement": "{ WarehouseModel }",
        "importPath": "../models/warehouse.model"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 7,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 92
  },
  {
    "path": "src/modules/product-ingestion/mappers/shopify-product.mapper.ts",
    "module": "product-ingestion",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/modules/product-ingestion/mappers/product-mapper.interface.ts",
    "module": "product-ingestion",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ MarketplaceProduct }",
        "importPath": "../../marketplaces/models/marketplace.models"
      },
      {
        "importStatement": "{ IProduct }",
        "importPath": "../models/product.model"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 103
  },
  {
    "path": "src/modules/product-ingestion/mappers/marketplace-data.interfaces.ts",
    "module": "product-ingestion",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 131
  },
  {
    "path": "src/modules/product-ingestion/mappers/index.ts",
    "module": "product-ingestion",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ productMapperRegistry }",
        "importPath": "./product-mapper.interface"
      },
      {
        "importStatement": "{ ShopifyProductMapper }",
        "importPath": "./shopify-product.mapper"
      },
      {
        "importStatement": "{ AmazonProductMapper }",
        "importPath": "./amazon-product.mapper"
      },
      {
        "importStatement": "{ TakealotProductMapper }",
        "importPath": "./takealot-product.mapper"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 20
  },
  {
    "path": "src/modules/product-ingestion/mappers/amazon-product.mapper.ts",
    "module": "product-ingestion",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Injectable }",
        "importPath": "../../../decorators/injectable.decorator"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ ProductModel }",
        "importPath": "../models/product.model"
      },
      {
        "importStatement": "{ WarehouseModel }",
        "importPath": "../models/warehouse.model"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 7,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 92
  },
  {
    "path": "src/modules/order-ingestion/index.ts",
    "module": "order-ingestion",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "orderIngestionService",
        "importPath": "./services/order-ingestion.service"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 16
  },
  {
    "path": "src/modules/order-ingestion/tests/order-ingestion.test.ts",
    "module": "order-ingestion",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ orderIngestionService }",
        "importPath": "../index"
      },
      {
        "importStatement": "{ orderMapperRegistry }",
        "importPath": "../mappers"
      },
      {
        "importStatement": "Order",
        "importPath": "../models/order.model"
      },
      {
        "importStatement": "xeroInvoiceService",
        "importPath": "../services/xero-invoice.service"
      },
      {
        "importStatement": "{ MarketplaceOrder, OrderStatus, PaymentStatus, ShippingStatus }",
        "importPath": "../../marketplaces/models/marketplace.models"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 6,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 242
  },
  {
    "path": "src/modules/order-ingestion/services/xero-invoice.service.ts",
    "module": "order-ingestion",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ IOrderDocument }",
        "importPath": "../models/order.model"
      },
      {
        "importStatement": "logger",
        "importPath": "../../../utils/logger"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 82
  },
  {
    "path": "src/modules/order-ingestion/services/order-ingestion.service.ts",
    "module": "order-ingestion",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Injectable }",
        "importPath": "../../../decorators/injectable.decorator"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 50
  },
  {
    "path": "src/modules/order-ingestion/models/order.model.ts",
    "module": "order-ingestion",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Schema, Model }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 355
  },
  {
    "path": "src/modules/order-ingestion/mappers/takealot-order.mapper.ts",
    "module": "order-ingestion",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ IOrderMapper }",
        "importPath": "./order-mapper.interface"
      },
      {
        "importStatement": "{ MarketplaceOrder, OrderStatus as MarketplaceOrderStatus, PaymentStatus as MarketplacePaymentStatus }",
        "importPath": "../../marketplaces/models/marketplace.models"
      },
      {
        "importStatement": "{ IOrder, OrderStatus, PaymentStatus, FulfillmentType }",
        "importPath": "../models/order.model"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 213
  },
  {
    "path": "src/modules/order-ingestion/mappers/shopify-order.mapper.ts",
    "module": "order-ingestion",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ IOrderMapper }",
        "importPath": "./order-mapper.interface"
      },
      {
        "importStatement": "{ MarketplaceOrder, OrderStatus as MarketplaceOrderStatus, PaymentStatus as MarketplacePaymentStatus }",
        "importPath": "../../marketplaces/models/marketplace.models"
      },
      {
        "importStatement": "{ IOrder, OrderStatus, PaymentStatus, FulfillmentType }",
        "importPath": "../models/order.model"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 187
  },
  {
    "path": "src/modules/order-ingestion/mappers/order-mapper.interface.ts",
    "module": "order-ingestion",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ MarketplaceOrder }",
        "importPath": "../../marketplaces/models/marketplace.models"
      },
      {
        "importStatement": "{ IOrder }",
        "importPath": "../models/order.model"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 76
  },
  {
    "path": "src/modules/order-ingestion/mappers/index.ts",
    "module": "order-ingestion",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ orderMapperRegistry }",
        "importPath": "./order-mapper.interface"
      },
      {
        "importStatement": "{ ShopifyOrderMapper }",
        "importPath": "./shopify-order.mapper"
      },
      {
        "importStatement": "{ AmazonOrderMapper }",
        "importPath": "./amazon-order.mapper"
      },
      {
        "importStatement": "{ TakealotOrderMapper }",
        "importPath": "./takealot-order.mapper"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 19
  },
  {
    "path": "src/modules/order-ingestion/mappers/amazon-order.mapper.ts",
    "module": "order-ingestion",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ IOrderMapper }",
        "importPath": "./order-mapper.interface"
      },
      {
        "importStatement": "{ MarketplaceOrder, OrderStatus as MarketplaceOrderStatus, PaymentStatus as MarketplacePaymentStatus }",
        "importPath": "../../marketplaces/models/marketplace.models"
      },
      {
        "importStatement": "{ IOrder, OrderStatus, PaymentStatus, FulfillmentType }",
        "importPath": "../models/order.model"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 242
  },
  {
    "path": "src/modules/notifications/index.ts",
    "module": "notifications",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Server as HttpServer }",
        "importPath": "http"
      },
      {
        "importStatement": "{ notificationRoutes }",
        "importPath": "./routes/notification.routes"
      },
      {
        "importStatement": "{ NotificationWebSocketManager }",
        "importPath": "./utils/websocket"
      },
      {
        "importStatement": "{ NotificationService }",
        "importPath": "./services/notification.service"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 28
  },
  {
    "path": "src/modules/notifications/utils/websocket.ts",
    "module": "notifications",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Server as HttpServer }",
        "importPath": "http"
      },
      {
        "importStatement": "{ Server as SocketIOServer, Socket }",
        "importPath": "socket.io"
      },
      {
        "importStatement": "{ INotification, NotificationType, NotificationCategory }",
        "importPath": "../models/notification.model"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 250
  },
  {
    "path": "src/modules/notifications/tests/notification.service.test.ts",
    "module": "notifications",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 17
  },
  {
    "path": "src/modules/notifications/services/notification.service.ts",
    "module": "notifications",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 16
  },
  {
    "path": "src/modules/notifications/routes/notification.routes.ts",
    "module": "notifications",
    "fileType": "route",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Router }",
        "importPath": "express"
      },
      {
        "importStatement": "{ NotificationController }",
        "importPath": "../controllers/notification.controller"
      },
      {
        "importStatement": "{ authenticate }",
        "importPath": "../../../middleware/auth.middleware"
      },
      {
        "importStatement": "{ validateRequest }",
        "importPath": "../../../middleware/validation.middleware"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/notifications/models/notification.model.ts",
    "module": "notifications",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Schema }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 110
  },
  {
    "path": "src/modules/notifications/controllers/notification.controller.ts",
    "module": "notifications",
    "fileType": "controller",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 36
  },
  {
    "path": "src/modules/marketplaces/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "{ MarketplaceAdapterFactory }",
        "importPath": "./services/marketplace-adapter-factory.service"
      },
      {
        "importStatement": "{ TakealotAdapter }",
        "importPath": "./adapters/takealot/takealot.adapter"
      },
      {
        "importStatement": "{ ShopifyAdapter }",
        "importPath": "./adapters/shopify/shopify.adapter"
      },
      {
        "importStatement": "marketplaceProductRoutes",
        "importPath": "./routes/marketplace-product.routes"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 44
  },
  {
    "path": "src/modules/marketplaces/utils/credential-manager.ts",
    "module": "marketplaces",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ MarketplaceCredentials }",
        "importPath": "../models/marketplace.models"
      },
      {
        "importStatement": "* as crypto",
        "importPath": "crypto"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 122
  },
  {
    "path": "src/modules/marketplaces/services/product-push.service.ts",
    "module": "marketplaces",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ ApiError }",
        "importPath": "../../../middleware/error.middleware"
      },
      {
        "importStatement": "{ MarketplaceAdapterFactory }",
        "importPath": "../adapters/marketplace-adapter.factory"
      },
      {
        "importStatement": "{ MarketplaceCredentialsService }",
        "importPath": "./marketplace-credentials.service"
      },
      {
        "importStatement": "{ IMarketplaceAdapter }",
        "importPath": "../adapters/interfaces/marketplace-adapter.interface"
      },
      {
        "importStatement": "{ \n  StockUpdatePayload, \n  PriceUpdatePayload, \n  StatusUpdatePayload, \n  ProductStatus,\n  OperationResult\n}",
        "importPath": "../models/marketplace.models"
      }
    ],
    "importCount": 6,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 193
  },
  {
    "path": "src/modules/marketplaces/services/product-push.service.test.ts",
    "module": "marketplaces",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ ProductPushService }",
        "importPath": "./product-push.service"
      },
      {
        "importStatement": "{ MarketplaceAdapterFactory }",
        "importPath": "../adapters/marketplace-adapter.factory"
      },
      {
        "importStatement": "{ MarketplaceCredentialsService }",
        "importPath": "./marketplace-credentials.service"
      },
      {
        "importStatement": "{ ApiError }",
        "importPath": "../../../middleware/error.middleware"
      },
      {
        "importStatement": "{ IMarketplaceAdapter }",
        "importPath": "../adapters/interfaces/marketplace-adapter.interface"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 341
  },
  {
    "path": "src/modules/marketplaces/services/marketplace-sync.service.ts",
    "module": "marketplaces",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Injectable }",
        "importPath": "../../../decorators/injectable.decorator"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 31
  },
  {
    "path": "src/modules/marketplaces/services/marketplace-credentials.service.ts",
    "module": "marketplaces",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ MarketplaceCredentials }",
        "importPath": "../models/marketplace.models"
      },
      {
        "importStatement": "{ ApiError }",
        "importPath": "../../../middleware/error.middleware"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 167
  },
  {
    "path": "src/modules/marketplaces/services/marketplace-adapter-factory.service.ts",
    "module": "marketplaces",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 16
  },
  {
    "path": "src/modules/marketplaces/routes/marketplace.routes.ts",
    "module": "marketplaces",
    "fileType": "route",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Router }",
        "importPath": "express"
      },
      {
        "importStatement": "{ MarketplaceProductController }",
        "importPath": "../controllers/marketplace-product.controller"
      },
      {
        "importStatement": "{ authenticate }",
        "importPath": "../../../middleware/auth.middleware"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 64
  },
  {
    "path": "src/modules/marketplaces/routes/marketplace-product.routes.ts",
    "module": "marketplaces",
    "fileType": "route",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "{ Router, Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ MarketplaceProductController }",
        "importPath": "../controllers/marketplace-product.controller"
      },
      {
        "importStatement": "{ authenticate }",
        "importPath": "../../../middleware/auth.middleware"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 150
  },
  {
    "path": "src/modules/marketplaces/models/marketplace.models.ts",
    "module": "marketplaces",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 5,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 421
  },
  {
    "path": "src/modules/marketplaces/interfaces/marketplace-adapter.interface.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 7,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 91
  },
  {
    "path": "src/modules/marketplaces/examples/takealot-adapter-usage.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/modules/marketplaces/examples/multi-adapter-usage.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ ProductPushService }",
        "importPath": "../services/product-push.service"
      },
      {
        "importStatement": "{ MarketplaceCredentialsService }",
        "importPath": "../services/marketplace-credentials.service"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 115
  },
  {
    "path": "src/modules/marketplaces/examples/adapter-usage-example.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/modules/marketplaces/controllers/marketplace-product.controller.ts",
    "module": "marketplaces",
    "fileType": "controller",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response }",
        "importPath": "express"
      },
      {
        "importStatement": "{ ProductPushService, ProductUpdateData, ProductPushResult }",
        "importPath": "../services/product-push.service"
      },
      {
        "importStatement": "{ MarketplaceCredentialsService }",
        "importPath": "../services/marketplace-credentials.service"
      },
      {
        "importStatement": "{ ApiError }",
        "importPath": "../../../middleware/error.middleware"
      },
      {
        "importStatement": "InventoryItem",
        "importPath": "../../../models/inventory.model"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 6,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 2,
    "lineCount": 187
  },
  {
    "path": "src/modules/marketplaces/config/takealot.config.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 31
  },
  {
    "path": "src/modules/marketplaces/config/shopify.config.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 21
  },
  {
    "path": "src/modules/marketplaces/config/amazon.config.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/modules/marketplaces/adapters/marketplace-adapter.factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ IMarketplaceAdapter }",
        "importPath": "./interfaces/marketplace-adapter.interface"
      },
      {
        "importStatement": "{ MarketplaceCredentials }",
        "importPath": "../models/marketplace.models"
      },
      {
        "importStatement": "{ ApiError }",
        "importPath": "../../../middleware/error.middleware"
      },
      {
        "importStatement": "{ TakealotAdapter }",
        "importPath": "./takealot/takealot-adapter"
      },
      {
        "importStatement": "{ AmazonAdapter }",
        "importPath": "./amazon/amazon-adapter"
      },
      {
        "importStatement": "{ ShopifyAdapter }",
        "importPath": "./shopify/shopify-adapter"
      }
    ],
    "importCount": 6,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 148
  },
  {
    "path": "src/modules/marketplaces/adapters/marketplace-adapter.factory.test.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ MarketplaceAdapterFactory }",
        "importPath": "./marketplace-adapter.factory"
      },
      {
        "importStatement": "{ ApiError }",
        "importPath": "../../../middleware/error.middleware"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 82
  },
  {
    "path": "src/modules/marketplaces/adapters/base-module.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 21
  },
  {
    "path": "src/modules/marketplaces/adapters/takealot/takealot.adapter.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/modules/marketplaces/adapters/takealot/takealot.adapter.test.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/modules/marketplaces/adapters/takealot/takealot-webhook-handler.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "* as crypto",
        "importPath": "crypto"
      },
      {
        "importStatement": "{ Request, Response }",
        "importPath": "express"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 324
  },
  {
    "path": "src/modules/marketplaces/adapters/takealot/takealot-adapter.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ MarketplaceAdapterInterface }",
        "importPath": "../../interfaces/marketplace-adapter.interface"
      },
      {
        "importStatement": "{ \n  MarketplaceCredentials,\n  ConnectionStatus,\n  MarketplaceProduct as MarketplaceModelProduct,\n  StockUpdatePayload,\n  PriceUpdatePayload,\n  StatusUpdatePayload,\n  MarketplaceOrder as MarketplaceModelOrder,\n  OrderAcknowledgment,\n  MarketplaceCategory,\n  PaginatedResponse,\n  OperationResult,\n  ProductFilterOptions, \n  OrderFilterOptions,\n  ProductStatus\n}",
        "importPath": "../../models/marketplace.models"
      },
      {
        "importStatement": "{ \n  MarketplaceProduct as AdapterInterfaceProduct,\n  MarketplaceOrder as AdapterInterfaceOrder\n}",
        "importPath": "../../interfaces/marketplace-adapter.interface"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 439
  },
  {
    "path": "src/modules/marketplaces/adapters/shopify/shopify.adapter.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/shopify/shopify.adapter.test.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ ShopifyAdapter }",
        "importPath": "./shopify.adapter"
      },
      {
        "importStatement": "{ createAdminApiClient }",
        "importPath": "@shopify/admin-api-client"
      },
      {
        "importStatement": "{ ProductStatus }",
        "importPath": "../../models/marketplace.models"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 4,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 239
  },
  {
    "path": "src/modules/marketplaces/adapters/shopify/shopify-adapter.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ MarketplaceAdapterInterface }",
        "importPath": "../../interfaces/marketplace-adapter.interface"
      },
      {
        "importStatement": "{ \n  MarketplaceCredentials,\n  ConnectionStatus,\n  MarketplaceProduct as MarketplaceModelProduct,\n  StockUpdatePayload,\n  PriceUpdatePayload,\n  StatusUpdatePayload,\n  MarketplaceOrder as MarketplaceModelOrder,\n  OrderAcknowledgment,\n  MarketplaceCategory,\n  PaginatedResponse,\n  OperationResult,\n  ProductFilterOptions, \n  OrderFilterOptions,\n  ProductStatus\n}",
        "importPath": "../../models/marketplace.models"
      },
      {
        "importStatement": "{ \n  MarketplaceProduct as AdapterInterfaceProduct,\n  MarketplaceOrder as AdapterInterfaceOrder\n}",
        "importPath": "../../interfaces/marketplace-adapter.interface"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 5,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 455
  },
  {
    "path": "src/modules/marketplaces/adapters/shopify/utils/leaky-bucket-rate-limiter.ts",
    "module": "marketplaces",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 97
  },
  {
    "path": "src/modules/marketplaces/adapters/shopify/types/shopify.types.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 18,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 443
  },
  {
    "path": "src/modules/marketplaces/adapters/shopify/services/product.service.ts",
    "module": "marketplaces",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 16
  },
  {
    "path": "src/modules/marketplaces/adapters/shopify/services/order.service.ts",
    "module": "marketplaces",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 16
  },
  {
    "path": "src/modules/marketplaces/adapters/shopify/services/inventory.service.ts",
    "module": "marketplaces",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 16
  },
  {
    "path": "src/modules/marketplaces/adapters/shopify/services/index.ts",
    "module": "marketplaces",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 8
  },
  {
    "path": "src/modules/marketplaces/adapters/shopify/services/fulfillment.service.ts",
    "module": "marketplaces",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 16
  },
  {
    "path": "src/modules/marketplaces/adapters/shopify/services/customer.service.ts",
    "module": "marketplaces",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 16
  },
  {
    "path": "src/modules/marketplaces/adapters/shopify/services/collection.service.ts",
    "module": "marketplaces",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 16
  },
  {
    "path": "src/modules/marketplaces/adapters/interfaces/marketplace-adapter.interface.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ \n  MarketplaceCredentials,\n  ConnectionStatus,\n  MarketplaceProduct,\n  StockUpdatePayload,\n  PriceUpdatePayload,\n  StatusUpdatePayload,\n  MarketplaceOrder,\n  OrderAcknowledgment,\n  MarketplaceCategory,\n  PaginatedResponse,\n  OperationResult,\n  ProductFilterOptions, \n  OrderFilterOptions\n}",
        "importPath": "../../models/marketplace.models"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 236
  },
  {
    "path": "src/modules/marketplaces/adapters/common/base-marketplace-adapter.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/amazon.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/amazon.adapter.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Injectable }",
        "importPath": "../../../../decorators/injectable.decorator"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 31
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/amazon.adapter.test.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule, ApiRequestFunction, ApiResponse }",
        "importPath": "../core/base-module.interface"
      },
      {
        "importStatement": "{ AmazonApiError }",
        "importPath": "../utils/amazon-error"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 74
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/amazon-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/amazon-adapter.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ MarketplaceAdapterInterface }",
        "importPath": "../../interfaces/marketplace-adapter.interface"
      },
      {
        "importStatement": "{ \n  MarketplaceCredentials,\n  ConnectionStatus,\n  MarketplaceProduct as MarketplaceModelProduct,\n  StockUpdatePayload,\n  PriceUpdatePayload,\n  StatusUpdatePayload,\n  MarketplaceOrder as MarketplaceModelOrder,\n  OrderAcknowledgment,\n  MarketplaceCategory,\n  PaginatedResponse,\n  OperationResult,\n  ProductFilterOptions, \n  OrderFilterOptions,\n  ProductStatus\n}",
        "importPath": "../../models/marketplace.models"
      },
      {
        "importStatement": "{ \n  MarketplaceProduct as AdapterInterfaceProduct,\n  MarketplaceOrder as AdapterInterfaceOrder\n}",
        "importPath": "../../interfaces/marketplace-adapter.interface"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 5,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 489
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/warehousing/warehousing.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule, ApiRequestFunction, ApiResponse }",
        "importPath": "../core/base-module.interface"
      },
      {
        "importStatement": "{ AmazonApiError }",
        "importPath": "../utils/amazon-error"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 74
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/warehousing/warehousing-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/warehousing/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/vendors/vendors.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/vendors/vendors-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/vendors/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 11
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/utils/batch-processor.ts",
    "module": "marketplaces",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 1,
    "lineCount": 89
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/utils/amazon-error.ts",
    "module": "marketplaces",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 93
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/uploads/uploads.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule, ApiRequestFunction, ApiResponse }",
        "importPath": "../core/base-module.interface"
      },
      {
        "importStatement": "{ AmazonApiError }",
        "importPath": "../utils/amazon-error"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 74
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/uploads/uploads-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/uploads/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/tokens/tokens.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/tokens/tokens-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/tokens/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 11
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/supply-source/supply-source.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/supply-source/supply-source-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/supply-source/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 9
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/solicitations/solicitations.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/solicitations/solicitations-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/solicitations/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 11
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/sellers/sellers.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule, ApiRequestFunction, ApiResponse }",
        "importPath": "../core/base-module.interface"
      },
      {
        "importStatement": "{ AmazonApiError }",
        "importPath": "../utils/amazon-error"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 74
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/sellers/sellers-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/sellers/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/schemas/amazon.generated.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 12,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 1723
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/sales/sales.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule, ApiRequestFunction, ApiResponse }",
        "importPath": "../core/base-module.interface"
      },
      {
        "importStatement": "{ AmazonApiError }",
        "importPath": "../utils/amazon-error"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 74
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/sales/sales-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/sales/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/restrictions/restrictions-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/restrictions/listings-restrictions.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/restrictions/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 11
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/reports/reports.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/reports/reports-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/reports/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 10
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/reports/amazon-reports.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/replenishment/replenishment.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/replenishment/replenishment-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/replenishment/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 9
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/product-types/product-type.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/product-types/product-type-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/product-types/product-type-definitions.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule, ApiRequestFunction, ApiResponse }",
        "importPath": "../core/base-module.interface"
      },
      {
        "importStatement": "{ AmazonApiError }",
        "importPath": "../utils/amazon-error"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 74
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/product-types/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/pricing/product-pricing.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule, ApiRequestFunction, ApiResponse }",
        "importPath": "../core/base-module.interface"
      },
      {
        "importStatement": "{ AmazonApiError }",
        "importPath": "../utils/amazon-error"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 74
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/pricing/pricing.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/pricing/pricing-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/pricing/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/orders/orders.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule, ApiRequestFunction, ApiResponse }",
        "importPath": "../core/base-module.interface"
      },
      {
        "importStatement": "{ AmazonApiError }",
        "importPath": "../utils/amazon-error"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 74
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/orders/orders-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/orders/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/notifications/notifications.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule, ApiRequestFunction, ApiResponse }",
        "importPath": "../core/base-module.interface"
      },
      {
        "importStatement": "{ AmazonApiError }",
        "importPath": "../utils/amazon-error"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 74
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/notifications/notifications-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/notifications/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/messaging/messaging.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/messaging/messaging-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/messaging/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 11
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/listings/listings.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/listings/listings-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/listings/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 9
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/inventory/inventory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/inventory/inventory-planning.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/inventory/inventory-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/inventory/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/inventory/fba-small-light/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/inventory/fba-small-light/fba-small-light.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Injectable }",
        "importPath": "../../../../../../decorators/injectable.decorator"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 23
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/inventory/fba-small-light/fba-small-light-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/inventory/fba-inbound-eligibility/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/inventory/fba-inbound-eligibility/fba-inbound-eligibility.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Injectable }",
        "importPath": "../../../../../../decorators/injectable.decorator"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 23
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/inventory/fba-inbound-eligibility/fba-inbound-eligibility-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/inventory/fba/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/inventory/fba/fba.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/inventory/fba/fba-inventory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Injectable }",
        "importPath": "../../../../../../decorators/injectable.decorator"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 23
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/inventory/fba/fba-inventory-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/inventory/fba/fba-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/fulfillment/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/fulfillment/fulfillment.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/fulfillment/fulfillment-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/fulfillment/outbound/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 9
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/fulfillment/outbound/fulfillment-outbound.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/fulfillment/outbound/fulfillment-outbound-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/fulfillment/merchant/merchant-fulfillment.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/fulfillment/merchant/merchant-fulfillment-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/fulfillment/merchant/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 11
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/fulfillment/inbound/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 9
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/fulfillment/inbound/fulfillment-inbound.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/fulfillment/inbound/fulfillment-inbound-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/finances/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 11
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/finances/finances.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/finances/finances-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/finances/shipment-invoicing/shipment-invoicing.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/finances/shipment-invoicing/shipment-invoicing-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/finances/shipment-invoicing/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 9
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/finances/invoices/invoices.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ ApiResponse }",
        "importPath": "../../core/api-types"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 174
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/finances/invoices/invoices-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/finances/invoices/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 11
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/fees/product-fees.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/fees/product-fees-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/fees/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 9
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/feeds/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/feeds/feeds.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule, ApiRequestFunction, ApiResponse }",
        "importPath": "../core/base-module.interface"
      },
      {
        "importStatement": "{ AmazonApiError }",
        "importPath": "../utils/amazon-error"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 74
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/feeds/feeds-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/feeds/amazon-feeds.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule, ApiRequestFunction, ApiResponse }",
        "importPath": "../core/base-module.interface"
      },
      {
        "importStatement": "{ AmazonApiError }",
        "importPath": "../utils/amazon-error"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 74
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/easyship/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 9
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/easyship/easy-ship.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/easyship/easy-ship-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/data-kiosk/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/data-kiosk/data-kiosk.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/data-kiosk/data-kiosk-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/core/registry-helper.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule, ApiRequestFunction }",
        "importPath": "./base-module.interface"
      },
      {
        "importStatement": "{ ModuleRegistry }",
        "importPath": "./module-registry"
      },
      {
        "importStatement": "{ getDefaultModuleVersion }",
        "importPath": "./module-definitions"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 43
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/core/module-registry.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "./base-module.interface"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 78
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/core/module-definitions.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 93
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/core/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 11
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/core/base-module.interface.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 51
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/core/api-types.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 41
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/core/api-module.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/catalog/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/catalog/catalog.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/catalog/catalog-items.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule, ApiRequestFunction, ApiResponse }",
        "importPath": "../core/base-module.interface"
      },
      {
        "importStatement": "{ AmazonApiError }",
        "importPath": "../utils/amazon-error"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 74
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/catalog/catalog-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/brand-protection/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/brand-protection/brand-protection.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule, ApiRequestFunction, ApiResponse }",
        "importPath": "../core/base-module.interface"
      },
      {
        "importStatement": "{ AmazonApiError }",
        "importPath": "../utils/amazon-error"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 74
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/brand-protection/brand-protection-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/b2b/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/b2b/b2b.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule, ApiRequestFunction, ApiResponse }",
        "importPath": "../core/base-module.interface"
      },
      {
        "importStatement": "{ AmazonApiError }",
        "importPath": "../utils/amazon-error"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 74
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/b2b/b2b-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/authorization/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 7
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/authorization/authorization.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule, ApiRequestFunction, ApiResponse }",
        "importPath": "../core/base-module.interface"
      },
      {
        "importStatement": "{ AmazonApiError }",
        "importPath": "../utils/amazon-error"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 74
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/authorization/authorization-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/application/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 10
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/application/application-management.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/application/application-management-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/application/integrations/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 9
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/application/integrations/application-integrations.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/application/integrations/application-integrations-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/aplus/index.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 11
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/aplus/aplus-factory.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ BaseModule }",
        "importPath": "../../base-module"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 22
  },
  {
    "path": "src/modules/marketplaces/adapters/amazon/aplus/aplus-content.ts",
    "module": "marketplaces",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/international-trade/index.ts",
    "module": "international-trade",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ ComplianceService }",
        "importPath": "./services/compliance.service"
      },
      {
        "importStatement": "{ ShippingRateService }",
        "importPath": "./services/shipping-rate.service"
      },
      {
        "importStatement": "{ DHLAdapter }",
        "importPath": "./adapters/dhl/dhl.adapter"
      },
      {
        "importStatement": "{ FedExAdapter }",
        "importPath": "./adapters/fedex/fedex.adapter"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 17
  },
  {
    "path": "src/modules/international-trade/utils/hs-code-lookup.ts",
    "module": "international-trade",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 339
  },
  {
    "path": "src/modules/international-trade/utils/customs-calculator.ts",
    "module": "international-trade",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ getHsCodeDetails }",
        "importPath": "./hs-code-lookup"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 294
  },
  {
    "path": "src/modules/international-trade/tests/international-trade.service.test.ts",
    "module": "international-trade",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 17
  },
  {
    "path": "src/modules/international-trade/services/shipping-rate.service.ts",
    "module": "international-trade",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 19
  },
  {
    "path": "src/modules/international-trade/services/international-trade.service.ts",
    "module": "international-trade",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ InternationalShipment, CustomsDeclaration, IInternationalShipment, ICustomsDeclaration }",
        "importPath": "../models/international-trade.model"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 4,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 182
  },
  {
    "path": "src/modules/international-trade/services/customs-document.service.ts",
    "module": "international-trade",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ IInternationalShipment, ICustomsDeclaration }",
        "importPath": "../models/international-trade.model"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 304
  },
  {
    "path": "src/modules/international-trade/services/compliance.service.ts",
    "module": "international-trade",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 16
  },
  {
    "path": "src/modules/international-trade/routes/international-trade.routes.ts",
    "module": "international-trade",
    "fileType": "route",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "{ Router, Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "* as international_trade_Controller",
        "importPath": "../controllers/international_trade.controller"
      },
      {
        "importStatement": "{ authenticate }",
        "importPath": "../../../middleware/auth.middleware"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 515
  },
  {
    "path": "src/modules/international-trade/models/international-trade.model.ts",
    "module": "international-trade",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Schema, Document, Model }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 125
  },
  {
    "path": "src/modules/international-trade/interfaces/shipping-provider.interface.ts",
    "module": "international-trade",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 16
  },
  {
    "path": "src/modules/international-trade/controllers/international_trade.controller.ts",
    "module": "international-trade",
    "fileType": "controller",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 19
  },
  {
    "path": "src/modules/international-trade/controllers/international-trade.controller.ts",
    "module": "international-trade",
    "fileType": "controller",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 40
  },
  {
    "path": "src/modules/international-trade/config/trade-providers.config.ts",
    "module": "international-trade",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/modules/international-trade/adapters/fedex/fedex.adapter.ts",
    "module": "international-trade",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 16
  },
  {
    "path": "src/modules/international-trade/adapters/dhl/dhl.adapter.ts",
    "module": "international-trade",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 16
  },
  {
    "path": "src/modules/international-trade/adapters/common/base-shipping-adapter.ts",
    "module": "international-trade",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/modules/credits/index.ts",
    "module": "credits",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "{ CreditService, InsufficientCreditsError }",
        "importPath": "./services/credit.service"
      },
      {
        "importStatement": "{ \n  CreditBalance, \n  CreditTransaction, \n  CreditTransactionType,\n  SubscriptionTier,\n  MONTHLY_CREDITS\n}",
        "importPath": "./models/credit.model"
      },
      {
        "importStatement": "creditRoutes",
        "importPath": "./routes/credit.routes"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 37
  },
  {
    "path": "src/modules/credits/tests/credit.service.test.ts",
    "module": "credits",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 17
  },
  {
    "path": "src/modules/credits/services/credit.service.ts",
    "module": "credits",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ \n  CreditBalance, \n  CreditTransaction, \n  CreditTransactionType,\n  ICreditBalanceDocument,\n  ICreditTransactionDocument,\n  MONTHLY_CREDITS,\n  SubscriptionTier\n}",
        "importPath": "../models/credit.model"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 8,
    "lineCount": 382
  },
  {
    "path": "src/modules/credits/routes/credit.routes.ts",
    "module": "credits",
    "fileType": "route",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Router }",
        "importPath": "express"
      },
      {
        "importStatement": "{ CreditController }",
        "importPath": "../controllers/credit.controller"
      },
      {
        "importStatement": "{ authenticate }",
        "importPath": "../../../middleware/auth.middleware"
      },
      {
        "importStatement": "{ validateRequest }",
        "importPath": "../../../middleware/validation.middleware"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 52
  },
  {
    "path": "src/modules/credits/models/credit.model.ts",
    "module": "credits",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Model, Schema }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 124
  },
  {
    "path": "src/modules/credits/controllers/credit.controller.ts",
    "module": "credits",
    "fileType": "controller",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 58
  },
  {
    "path": "src/modules/connections/index.ts",
    "module": "connections",
    "fileType": "other",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "connectionRoutes",
        "importPath": "./routes/connection.routes"
      },
      {
        "importStatement": "credentialProvider",
        "importPath": "./utils/credential-provider"
      },
      {
        "importStatement": "connectionService",
        "importPath": "./services/connection.service"
      },
      {
        "importStatement": "MarketplaceConnection, { \n  AuthenticationType, \n  ConnectionStatus, \n  MarketplaceType,\n  IMarketplaceConnection,\n  IMarketplaceConnectionDocument\n}",
        "importPath": "./models/connection.model"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 42
  },
  {
    "path": "src/modules/connections/utils/credential-provider.ts",
    "module": "connections",
    "fileType": "utility",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "connectionService, { ConnectionServiceWithDirectAccess }",
        "importPath": "../services/connection.service"
      },
      {
        "importStatement": "{ MarketplaceCredentials }",
        "importPath": "../../marketplaces/models/marketplace.models"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 25
  },
  {
    "path": "src/modules/connections/services/secrets.service.ts",
    "module": "connections",
    "fileType": "service",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "* as crypto",
        "importPath": "crypto"
      },
      {
        "importStatement": "{ SecretManagerServiceClient }",
        "importPath": "@google-cloud/secret-manager"
      },
      {
        "importStatement": "{ AccessSecretVersionResponse }",
        "importPath": "@google-cloud/secret-manager"
      },
      {
        "importStatement": "{ MarketplaceCredentials }",
        "importPath": "../../marketplaces/models/marketplace.models"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 247
  },
  {
    "path": "src/modules/connections/services/connection.service.ts",
    "module": "connections",
    "fileType": "service",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "MarketplaceConnection, {\n  AuthenticationType,\n  ConnectionStatus,\n  IMarketplaceConnectionDocument,\n  MarketplaceType,\n}",
        "importPath": "../models/connection.model"
      },
      {
        "importStatement": "secretsService",
        "importPath": "./secrets.service"
      },
      {
        "importStatement": "{ MarketplaceCredentials }",
        "importPath": "../../marketplaces/models/marketplace.models"
      },
      {
        "importStatement": "{ MarketplaceAdapterFactory }",
        "importPath": "../../marketplaces/adapters/marketplace-adapter.factory"
      },
      {
        "importStatement": "{ IMarketplaceAdapter }",
        "importPath": "../../marketplaces/adapters/interfaces/marketplace-adapter.interface"
      },
      {
        "importStatement": "{ toObjectId }",
        "importPath": "../../../types/mongo-util-types"
      }
    ],
    "importCount": 7,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 403
  },
  {
    "path": "src/modules/connections/routes/connection.routes.ts",
    "module": "connections",
    "fileType": "route",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "express",
        "importPath": "express"
      },
      {
        "importStatement": "connectionController",
        "importPath": "../controllers/connection.controller"
      },
      {
        "importStatement": "{ authenticate as authMiddleware }",
        "importPath": "../../../middleware/auth.middleware"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 159
  },
  {
    "path": "src/modules/connections/models/connection.model.ts",
    "module": "connections",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Schema, Model }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "* as crypto",
        "importPath": "crypto"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 1,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 168
  },
  {
    "path": "src/modules/connections/controllers/connection.controller.ts",
    "module": "connections",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response }",
        "importPath": "express"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      },
      {
        "importStatement": "connectionService",
        "importPath": "../services/connection.service"
      },
      {
        "importStatement": "MarketplaceConnection, { \n  AuthenticationType, \n  ConnectionStatus, \n  MarketplaceType,\n  SyncStatus\n}",
        "importPath": "../models/connection.model"
      },
      {
        "importStatement": "{ MarketplaceCredentials }",
        "importPath": "../../marketplaces/models/marketplace.models"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 365
  },
  {
    "path": "src/modules/ai-cs-agent/index.ts",
    "module": "ai-cs-agent",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "conversationRoutes",
        "importPath": "./routes/conversation.routes"
      },
      {
        "importStatement": "{ ConversationService }",
        "importPath": "./services/conversation.service"
      },
      {
        "importStatement": "{ VertexAIService }",
        "importPath": "./services/vertex-ai.service"
      },
      {
        "importStatement": "{ RAGService }",
        "importPath": "./services/rag.service"
      },
      {
        "importStatement": "{ initializeWebSocket }",
        "importPath": "./utils/websocket"
      },
      {
        "importStatement": "{ Server as HttpServer }",
        "importPath": "http"
      }
    ],
    "importCount": 6,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 28
  },
  {
    "path": "src/modules/ai-cs-agent/utils/websocket.ts",
    "module": "ai-cs-agent",
    "fileType": "utility",
    "priority": "medium",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "{ Server as HttpServer }",
        "importPath": "http"
      },
      {
        "importStatement": "{ Server as SocketIOServer, Socket }",
        "importPath": "socket.io"
      },
      {
        "importStatement": "{ ConversationService }",
        "importPath": "../services/conversation.service"
      },
      {
        "importStatement": "{ VertexAIService }",
        "importPath": "../services/vertex-ai.service"
      },
      {
        "importStatement": "{ RAGService }",
        "importPath": "../services/rag.service"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 287
  },
  {
    "path": "src/modules/ai-cs-agent/tests/conversation.service.test.ts",
    "module": "ai-cs-agent",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ ConversationService }",
        "importPath": "../services/conversation.service"
      },
      {
        "importStatement": "{ VertexAIService }",
        "importPath": "../services/vertex-ai.service"
      },
      {
        "importStatement": "{ RAGService }",
        "importPath": "../services/rag.service"
      },
      {
        "importStatement": "{ CreditService }",
        "importPath": "../../credits/services/credit.service"
      },
      {
        "importStatement": "Conversation, { ConversationStatus, MessageRole }",
        "importPath": "../models/conversation.model"
      }
    ],
    "importCount": 6,
    "anyTypeCount": 3,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 267
  },
  {
    "path": "src/modules/ai-cs-agent/services/vertex-ai.service.ts",
    "module": "ai-cs-agent",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 27
  },
  {
    "path": "src/modules/ai-cs-agent/services/rag.service.ts",
    "module": "ai-cs-agent",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 70
  },
  {
    "path": "src/modules/ai-cs-agent/services/conversation.service.ts",
    "module": "ai-cs-agent",
    "fileType": "service",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 2,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 87
  },
  {
    "path": "src/modules/ai-cs-agent/routes/conversation.routes.ts",
    "module": "ai-cs-agent",
    "fileType": "route",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "express",
        "importPath": "express"
      },
      {
        "importStatement": "{ ConversationController }",
        "importPath": "../controllers/conversation.controller"
      },
      {
        "importStatement": "{ authenticate }",
        "importPath": "../../../middleware/auth.middleware"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 167
  },
  {
    "path": "src/modules/ai-cs-agent/models/conversation.model.ts",
    "module": "ai-cs-agent",
    "fileType": "model",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Schema }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 2,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 116
  },
  {
    "path": "src/modules/ai-cs-agent/interfaces/conversation.interface.ts",
    "module": "ai-cs-agent",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Document }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ ConversationStatus }",
        "importPath": "../models/conversation.model"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 26
  },
  {
    "path": "src/modules/ai-cs-agent/controllers/conversation.controller.ts",
    "module": "ai-cs-agent",
    "fileType": "controller",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ Types }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 62
  },
  {
    "path": "src/models/warehouse.model.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Model, Schema }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 335
  },
  {
    "path": "src/models/user.model.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Model, Schema }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "* as bcrypt",
        "importPath": "bcryptjs"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 1,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 98
  },
  {
    "path": "src/models/user.model.test.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/models/task.model.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Model, Schema }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 228
  },
  {
    "path": "src/models/task.model.test.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/models/system-status.model.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Model, Schema }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ TypedSchema, PreHookCallback, PostHookCallback }",
        "importPath": "../types/mongo-util-types"
      },
      {
        "importStatement": "/**\n * Static methods for SystemStatus model\n */\nexport interface ISystemStatusStatics {\n  // Add static methods as needed\n} { Ty\n\n/**\n * Methods for SystemStatus model\n */\nexport interface ISystemStatusMethods {\n  // Add methods as needed\n}pedSchema, PreHookCallback, PostHookCallback }",
        "importPath": "../types/mongo-util-types"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 1,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 76
  },
  {
    "path": "src/models/system-status.model.test.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/models/supplier.model.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Model, Schema }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 136
  },
  {
    "path": "src/models/supplier.model.test.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/models/shipment.model.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Model, Schema }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 371
  },
  {
    "path": "src/models/shipment.model.test.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/models/shipment-alert.model.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/models/shipment-alert.model.test.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/models/purchase-order.model.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Model, Schema }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 162
  },
  {
    "path": "src/models/purchase-order.model.test.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/models/project.model.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Model, Schema }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 263
  },
  {
    "path": "src/models/project.model.test.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/models/order.model.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Model, Schema }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 461
  },
  {
    "path": "src/models/milestone.model.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Model, Schema }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 160
  },
  {
    "path": "src/models/milestone.model.test.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/models/inventory.model.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Model, Schema }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 230
  },
  {
    "path": "src/models/inventory.model.test.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/models/inventory-stock.model.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Model, Schema }",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ TypedSchema, PreHookCallback, PostHookCallback }",
        "importPath": "../types/mongo-util-types"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 119
  },
  {
    "path": "src/models/inventory-alert.model.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Model, Schema }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 132
  },
  {
    "path": "src/models/inventory-alert.model.test.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/models/customer.model.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Model, Schema }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 202
  },
  {
    "path": "src/models/customer.model.test.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/models/activity.model.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "mongoose, { Document, Model, Schema }",
        "importPath": "mongoose"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 0,
    "isMongooseModel": true,
    "controllerMethodCount": 0,
    "lineCount": 97
  },
  {
    "path": "src/models/activity.model.test.ts",
    "module": "core",
    "fileType": "model",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/middleware/validation.middleware.ts",
    "module": "core",
    "fileType": "middleware",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 21
  },
  {
    "path": "src/middleware/error.middleware.ts",
    "module": "core",
    "fileType": "middleware",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      }
    ],
    "importCount": 1,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 96
  },
  {
    "path": "src/middleware/error.middleware.test.ts",
    "module": "core",
    "fileType": "middleware",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/middleware/auth.middleware.ts",
    "module": "core",
    "fileType": "middleware",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "* as jwt",
        "importPath": "jsonwebtoken"
      },
      {
        "importStatement": "User, { IUserDocument }",
        "importPath": "../models/user.model"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 143
  },
  {
    "path": "src/middleware/admin.middleware.ts",
    "module": "core",
    "fileType": "middleware",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 13
  },
  {
    "path": "src/decorators/injectable.decorator.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 12
  },
  {
    "path": "src/controllers/webhook.controller.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      },
      {
        "importStatement": "Activity",
        "importPath": "../models/activity.model"
      },
      {
        "importStatement": "{ TakealotWebhookHandler }",
        "importPath": "../modules/marketplaces/adapters/takealot/takealot-webhook-handler"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 2,
    "lineCount": 70
  },
  {
    "path": "src/controllers/warehouse.controller.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "Warehouse, { WarehouseStatus, WarehouseType }",
        "importPath": "../models/warehouse.model"
      },
      {
        "importStatement": "Inventory",
        "importPath": "../models/inventory.model"
      },
      {
        "importStatement": "Activity",
        "importPath": "../models/activity.model"
      },
      {
        "importStatement": "{ IUserDocument }",
        "importPath": "../models/user.model"
      }
    ],
    "importCount": 7,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 515
  },
  {
    "path": "src/controllers/upload.controller.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ AuthenticatedRequest, TypedResponse, getTypedResponse, ControllerMethod, AuthControllerMethod }",
        "importPath": "../types/express-extensions"
      },
      {
        "importStatement": "Project",
        "importPath": "../models/project.model"
      },
      {
        "importStatement": "Inventory",
        "importPath": "../models/inventory.model"
      },
      {
        "importStatement": "Shipment",
        "importPath": "../models/shipment.model"
      },
      {
        "importStatement": "Customer",
        "importPath": "../models/customer.model"
      },
      {
        "importStatement": "Supplier",
        "importPath": "../models/supplier.model"
      },
      {
        "importStatement": "PurchaseOrder",
        "importPath": "../models/purchase-order.model"
      },
      {
        "importStatement": "Task",
        "importPath": "../models/task.model"
      },
      {
        "importStatement": "Activity",
        "importPath": "../models/activity.model"
      }
    ],
    "importCount": 10,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 27
  },
  {
    "path": "src/controllers/upload.controller.test.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "* as UploadController",
        "importPath": "./upload.controller"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 111
  },
  {
    "path": "src/controllers/task.controller.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": false,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ AuthenticatedRequest, TypedResponse, getTypedResponse, ControllerMethod, AuthControllerMethod }",
        "importPath": "../types/express-extensions"
      },
      {
        "importStatement": "Project",
        "importPath": "../models/project.model"
      },
      {
        "importStatement": "Inventory",
        "importPath": "../models/inventory.model"
      },
      {
        "importStatement": "Shipment",
        "importPath": "../models/shipment.model"
      },
      {
        "importStatement": "Customer",
        "importPath": "../models/customer.model"
      },
      {
        "importStatement": "Supplier",
        "importPath": "../models/supplier.model"
      },
      {
        "importStatement": "PurchaseOrder",
        "importPath": "../models/purchase-order.model"
      },
      {
        "importStatement": "Task",
        "importPath": "../models/task.model"
      },
      {
        "importStatement": "Activity",
        "importPath": "../models/activity.model"
      }
    ],
    "importCount": 10,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 27
  },
  {
    "path": "src/controllers/task.controller.test.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "* as TaskController",
        "importPath": "./task.controller"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 111
  },
  {
    "path": "src/controllers/shipment.controller.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "Shipment, { ShipmentStatus, ShipmentType }",
        "importPath": "../models/shipment.model"
      },
      {
        "importStatement": "Inventory",
        "importPath": "../models/inventory.model"
      },
      {
        "importStatement": "Customer",
        "importPath": "../models/customer.model"
      },
      {
        "importStatement": "Supplier",
        "importPath": "../models/supplier.model"
      },
      {
        "importStatement": "Activity",
        "importPath": "../models/activity.model"
      },
      {
        "importStatement": "{ IUserDocument }",
        "importPath": "../models/user.model"
      }
    ],
    "importCount": 9,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 506
  },
  {
    "path": "src/controllers/shipment.controller.test.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "* as ShipmentController",
        "importPath": "./shipment.controller"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 111
  },
  {
    "path": "src/controllers/rag_retrieval.controller.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 19
  },
  {
    "path": "src/controllers/project.controller.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "Project, { ProjectStatus, ProjectPhase }",
        "importPath": "../models/project.model"
      },
      {
        "importStatement": "Task",
        "importPath": "../models/task.model"
      },
      {
        "importStatement": "Customer",
        "importPath": "../models/customer.model"
      },
      {
        "importStatement": "Activity",
        "importPath": "../models/activity.model"
      },
      {
        "importStatement": "{ IUserDocument }",
        "importPath": "../models/user.model"
      }
    ],
    "importCount": 8,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 7,
    "lineCount": 518
  },
  {
    "path": "src/controllers/project.controller.test.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "* as ProjectController",
        "importPath": "./project.controller"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 111
  },
  {
    "path": "src/controllers/milestone.controller.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "Milestone, { MilestoneStatus }",
        "importPath": "../models/milestone.model"
      },
      {
        "importStatement": "Project",
        "importPath": "../models/project.model"
      },
      {
        "importStatement": "Task",
        "importPath": "../models/task.model"
      },
      {
        "importStatement": "Activity",
        "importPath": "../models/activity.model"
      },
      {
        "importStatement": "{ IUserDocument }",
        "importPath": "../models/user.model"
      }
    ],
    "importCount": 8,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 432
  },
  {
    "path": "src/controllers/milestone.controller.test.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "* as MilestoneController",
        "importPath": "./milestone.controller"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 111
  },
  {
    "path": "src/controllers/inventory.controller.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "Inventory",
        "importPath": "../models/inventory.model"
      },
      {
        "importStatement": "Activity",
        "importPath": "../models/activity.model"
      },
      {
        "importStatement": "{ IUserDocument }",
        "importPath": "../models/user.model"
      }
    ],
    "importCount": 6,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 5,
    "lineCount": 391
  },
  {
    "path": "src/controllers/inventory.controller.test.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "* as InventoryController",
        "importPath": "./inventory.controller"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 111
  },
  {
    "path": "src/controllers/inventory-stock.controller.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "Inventory",
        "importPath": "../models/inventory.model"
      },
      {
        "importStatement": "Activity",
        "importPath": "../models/activity.model"
      },
      {
        "importStatement": "{ IUserDocument }",
        "importPath": "../models/user.model"
      }
    ],
    "importCount": 6,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 296
  },
  {
    "path": "src/controllers/inventory-alert.controller.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "Inventory",
        "importPath": "../models/inventory.model"
      },
      {
        "importStatement": "InventoryAlert",
        "importPath": "../models/inventory-alert.model"
      },
      {
        "importStatement": "Activity",
        "importPath": "../models/activity.model"
      },
      {
        "importStatement": "{ IUserDocument }",
        "importPath": "../models/user.model"
      }
    ],
    "importCount": 7,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 304
  },
  {
    "path": "src/controllers/inventory-alert.controller.test.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "* as InventoryAlertController",
        "importPath": "./inventoryalert.controller"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 111
  },
  {
    "path": "src/controllers/international_trade.controller.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 19
  },
  {
    "path": "src/controllers/express.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 62
  },
  {
    "path": "src/controllers/example.controller.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ AuthenticatedRequest, TypedResponse, getTypedResponse, ControllerMethod, AuthControllerMethod }",
        "importPath": "../types/express-extensions"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 138
  },
  {
    "path": "src/controllers/dashboard.controller.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "Project",
        "importPath": "../models/project.model"
      },
      {
        "importStatement": "Inventory",
        "importPath": "../models/inventory.model"
      },
      {
        "importStatement": "Shipment",
        "importPath": "../models/shipment.model"
      },
      {
        "importStatement": "Customer",
        "importPath": "../models/customer.model"
      },
      {
        "importStatement": "Supplier",
        "importPath": "../models/supplier.model"
      },
      {
        "importStatement": "PurchaseOrder",
        "importPath": "../models/purchase-order.model"
      },
      {
        "importStatement": "Task",
        "importPath": "../models/task.model"
      },
      {
        "importStatement": "Activity",
        "importPath": "../models/activity.model"
      },
      {
        "importStatement": "{ ISupplier }",
        "importPath": "../models/supplier.model"
      },
      {
        "importStatement": "{ IPurchaseOrder }",
        "importPath": "../models/purchase-order.model"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ IUserDocument }",
        "importPath": "../models/user.model"
      }
    ],
    "importCount": 13,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 3,
    "lineCount": 209
  },
  {
    "path": "src/controllers/dashboard.controller.test.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "* as DashboardController",
        "importPath": "./dashboard.controller"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 111
  },
  {
    "path": "src/controllers/customer.controller.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      },
      {
        "importStatement": "Customer",
        "importPath": "../models/customer.model"
      },
      {
        "importStatement": "Order",
        "importPath": "../models/order.model"
      },
      {
        "importStatement": "Project",
        "importPath": "../models/project.model"
      }
    ],
    "importCount": 5,
    "anyTypeCount": 1,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 293
  },
  {
    "path": "src/controllers/customer.controller.test.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "* as CustomerController",
        "importPath": "./customer.controller"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 111
  },
  {
    "path": "src/controllers/auth.controller.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ AuthenticatedRequest, TypedResponse, getTypedResponse, ControllerMethod, AuthControllerMethod }",
        "importPath": "../types/express-extensions"
      },
      {
        "importStatement": "Project",
        "importPath": "../models/project.model"
      },
      {
        "importStatement": "Inventory",
        "importPath": "../models/inventory.model"
      },
      {
        "importStatement": "Shipment",
        "importPath": "../models/shipment.model"
      },
      {
        "importStatement": "Customer",
        "importPath": "../models/customer.model"
      },
      {
        "importStatement": "Supplier",
        "importPath": "../models/supplier.model"
      },
      {
        "importStatement": "PurchaseOrder",
        "importPath": "../models/purchase-order.model"
      },
      {
        "importStatement": "Task",
        "importPath": "../models/task.model"
      },
      {
        "importStatement": "Activity",
        "importPath": "../models/activity.model"
      }
    ],
    "importCount": 10,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 26
  },
  {
    "path": "src/controllers/auth.controller.test.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "* as AuthController",
        "importPath": "./auth.controller"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 111
  },
  {
    "path": "src/controllers/analytics.controller.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "{ AuthenticatedRequest, TypedResponse, getTypedResponse, ControllerMethod, AuthControllerMethod }",
        "importPath": "../types/express-extensions"
      },
      {
        "importStatement": "Project",
        "importPath": "../models/project.model"
      },
      {
        "importStatement": "Inventory",
        "importPath": "../models/inventory.model"
      },
      {
        "importStatement": "Shipment",
        "importPath": "../models/shipment.model"
      },
      {
        "importStatement": "Customer",
        "importPath": "../models/customer.model"
      },
      {
        "importStatement": "Supplier",
        "importPath": "../models/supplier.model"
      },
      {
        "importStatement": "PurchaseOrder",
        "importPath": "../models/purchase-order.model"
      },
      {
        "importStatement": "Task",
        "importPath": "../models/task.model"
      },
      {
        "importStatement": "Activity",
        "importPath": "../models/activity.model"
      }
    ],
    "importCount": 10,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 26
  },
  {
    "path": "src/controllers/analytics.controller.test.ts",
    "module": "core",
    "fileType": "controller",
    "priority": "high",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "{ Request, Response, NextFunction }",
        "importPath": "express"
      },
      {
        "importStatement": "* as AnalyticsController",
        "importPath": "./analytics.controller"
      },
      {
        "importStatement": "mongoose",
        "importPath": "mongoose"
      },
      {
        "importStatement": "{ StatusCodes }",
        "importPath": "http-status-codes"
      }
    ],
    "importCount": 4,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 111
  },
  {
    "path": "src/config/swagger.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "swaggerJSDoc",
        "importPath": "swagger-jsdoc"
      },
      {
        "importStatement": "{ version }",
        "importPath": "../../package.json"
      },
      {
        "importStatement": "{ Options }",
        "importPath": "swagger-jsdoc"
      }
    ],
    "importCount": 3,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 335
  },
  {
    "path": "src/config/index.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [
      {
        "importStatement": "dotenv",
        "importPath": "dotenv"
      },
      {
        "importStatement": "path",
        "importPath": "path"
      }
    ],
    "importCount": 2,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 47
  },
  {
    "path": "src/config/config.ts",
    "module": "core",
    "fileType": "other",
    "priority": "medium",
    "hasNoCheck": true,
    "imports": [],
    "importCount": 0,
    "anyTypeCount": 0,
    "isMongooseModel": false,
    "controllerMethodCount": 0,
    "lineCount": 14
  }
]